{
	"id": "1f473ef5d777751f27c7577d29b0b373",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TokenB_flattened.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.26;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: contracts/TokenB.sol\n\n\n//pragma solidity ^0.8.0;\n\n/**\n * @title TokenB \n * @dev Token B contract for Eth course - Hugo Jaca\n * Funciones:\n *      Constructor. Inicializa el token\n * Eventos:\n *\n *      Crear dos tokens ERC-20 simples: Los contrato de los tokens deben tener obligatoriamente los nombres TokenA y TokenB.\n *      Implementar un contrato de exchange (denominado obligatoriamente SimpleDEX) que:\n *         Mantenga un pool de liquidez para TokenA y TokenB.\n *         Utilice la fórmula del producto constante (x+dx)(y-dy) = xy para calcular los precios de intercambio.\n *         Permita añadir y retirar liquidez.\n *         Permita intercambiar TokenA por TokenB y viceversa.\n *      El contrato SimpleDEX debe contar obligatoriamente y sin modificación de la interface con las siguientes funciones:\n *         constructor(address _tokenA, address _tokenB)\n *         addLiquidity(uint256 amountA, uint256 amountB)\n *         swapAforB(uint256 amountAIn)\n *         swapBforA(uint256 amountBIn)\n *         removeLiquidity(uint256 amountA, uint256 amountB)\n *         getPrice(address _token)\n *      Incluir los eventos que consideren convenientes.\n */\n\n\ncontract TokenB is ERC20 {\n    constructor(uint256 initialSupply) ERC20(\"TokenB\", \"TKB\") {\n        _mint(msg.sender, initialSupply);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/TokenB_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenB_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenB_flattened.sol\":{\"keccak256\":\"0x8a370e3323bbcbbd06dce847bbe03725bf5bbc78596eaaa03fd7e51ed3d4a570\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://54b8f40fb7e0e3bd92173082cf6ad56f3ffa4ff90e8e2558952b7a7a452431f9\",\"dweb:/ipfs/QmUXHLm5ec19M5ATnChYWGPA7PHNjKKTvTVU2oXpqc9umo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenB_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenB_flattened.sol\":{\"keccak256\":\"0x8a370e3323bbcbbd06dce847bbe03725bf5bbc78596eaaa03fd7e51ed3d4a570\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://54b8f40fb7e0e3bd92173082cf6ad56f3ffa4ff90e8e2558952b7a7a452431f9\",\"dweb:/ipfs/QmUXHLm5ec19M5ATnChYWGPA7PHNjKKTvTVU2oXpqc9umo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 275,
								"contract": "contracts/TokenB_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 281,
								"contract": "contracts/TokenB_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 283,
								"contract": "contracts/TokenB_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 285,
								"contract": "contracts/TokenB_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 287,
								"contract": "contracts/TokenB_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenB_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenB_flattened.sol\":{\"keccak256\":\"0x8a370e3323bbcbbd06dce847bbe03725bf5bbc78596eaaa03fd7e51ed3d4a570\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://54b8f40fb7e0e3bd92173082cf6ad56f3ffa4ff90e8e2558952b7a7a452431f9\",\"dweb:/ipfs/QmUXHLm5ec19M5ATnChYWGPA7PHNjKKTvTVU2oXpqc9umo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenB_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenB_flattened.sol\":{\"keccak256\":\"0x8a370e3323bbcbbd06dce847bbe03725bf5bbc78596eaaa03fd7e51ed3d4a570\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://54b8f40fb7e0e3bd92173082cf6ad56f3ffa4ff90e8e2558952b7a7a452431f9\",\"dweb:/ipfs/QmUXHLm5ec19M5ATnChYWGPA7PHNjKKTvTVU2oXpqc9umo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenB_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenB_flattened.sol\":{\"keccak256\":\"0x8a370e3323bbcbbd06dce847bbe03725bf5bbc78596eaaa03fd7e51ed3d4a570\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://54b8f40fb7e0e3bd92173082cf6ad56f3ffa4ff90e8e2558952b7a7a452431f9\",\"dweb:/ipfs/QmUXHLm5ec19M5ATnChYWGPA7PHNjKKTvTVU2oXpqc9umo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenB_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenB_flattened.sol\":{\"keccak256\":\"0x8a370e3323bbcbbd06dce847bbe03725bf5bbc78596eaaa03fd7e51ed3d4a570\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://54b8f40fb7e0e3bd92173082cf6ad56f3ffa4ff90e8e2558952b7a7a452431f9\",\"dweb:/ipfs/QmUXHLm5ec19M5ATnChYWGPA7PHNjKKTvTVU2oXpqc9umo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenB_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenB_flattened.sol\":{\"keccak256\":\"0x8a370e3323bbcbbd06dce847bbe03725bf5bbc78596eaaa03fd7e51ed3d4a570\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://54b8f40fb7e0e3bd92173082cf6ad56f3ffa4ff90e8e2558952b7a7a452431f9\",\"dweb:/ipfs/QmUXHLm5ec19M5ATnChYWGPA7PHNjKKTvTVU2oXpqc9umo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TokenB": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Token B contract for Eth course - Hugo Jaca Funciones:      Constructor. Inicializa el token Eventos:      Crear dos tokens ERC-20 simples: Los contrato de los tokens deben tener obligatoriamente los nombres TokenA y TokenB.      Implementar un contrato de exchange (denominado obligatoriamente SimpleDEX) que:         Mantenga un pool de liquidez para TokenA y TokenB.         Utilice la fórmula del producto constante (x+dx)(y-dy) = xy para calcular los precios de intercambio.         Permita añadir y retirar liquidez.         Permita intercambiar TokenA por TokenB y viceversa.      El contrato SimpleDEX debe contar obligatoriamente y sin modificación de la interface con las siguientes funciones:         constructor(address _tokenA, address _tokenB)         addLiquidity(uint256 amountA, uint256 amountB)         swapAforB(uint256 amountAIn)         swapBforA(uint256 amountBIn)         removeLiquidity(uint256 amountA, uint256 amountB)         getPrice(address _token)      Incluir los eventos que consideren convenientes.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"title": "TokenB ",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TokenB_flattened.sol\":22880:23020  contract TokenB is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TokenB_flattened.sol\":22911:23018  constructor(uint256 initialSupply) ERC20(\"TokenB\", \"TKB\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TokenB_flattened.sol\":12401:12514  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x546f6b656e420000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x544b420000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/TokenB_flattened.sol\":12475:12480  name_ */\n  dup2\n    /* \"contracts/TokenB_flattened.sol\":12467:12472  _name */\n  0x03\n    /* \"contracts/TokenB_flattened.sol\":12467:12480  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/TokenB_flattened.sol\":12500:12507  symbol_ */\n  dup1\n    /* \"contracts/TokenB_flattened.sol\":12490:12497  _symbol */\n  0x04\n    /* \"contracts/TokenB_flattened.sol\":12490:12507  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/TokenB_flattened.sol\":12401:12514  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/TokenB_flattened.sol\":22979:23011  _mint(msg.sender, initialSupply) */\n  tag_11\n    /* \"contracts/TokenB_flattened.sol\":22985:22995  msg.sender */\n  caller\n    /* \"contracts/TokenB_flattened.sol\":22997:23010  initialSupply */\n  dup3\n    /* \"contracts/TokenB_flattened.sol\":22979:22984  _mint */\n  shl(0x20, tag_12)\n    /* \"contracts/TokenB_flattened.sol\":22979:23011  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/TokenB_flattened.sol\":22911:23018  constructor(uint256 initialSupply) ERC20(\"TokenB\", \"TKB\") {... */\n  pop\n    /* \"contracts/TokenB_flattened.sol\":22880:23020  contract TokenB is ERC20 {... */\n  jump(tag_13)\n    /* \"contracts/TokenB_flattened.sol\":18258:18466  function _mint(address account, uint256 value) internal {... */\ntag_12:\n    /* \"contracts/TokenB_flattened.sol\":18347:18348  0 */\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":18328:18349  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TokenB_flattened.sol\":18328:18335  account */\n  dup3\n    /* \"contracts/TokenB_flattened.sol\":18328:18349  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/TokenB_flattened.sol\":18324:18415  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"contracts/TokenB_flattened.sol\":18401:18402  0 */\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":18372:18404  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/TokenB_flattened.sol\":18324:18415  if (account == address(0)) {... */\ntag_15:\n    /* \"contracts/TokenB_flattened.sol\":18424:18459  _update(address(0), account, value) */\n  tag_18\n    /* \"contracts/TokenB_flattened.sol\":18440:18441  0 */\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":18444:18451  account */\n  dup4\n    /* \"contracts/TokenB_flattened.sol\":18453:18458  value */\n  dup4\n    /* \"contracts/TokenB_flattened.sol\":18424:18431  _update */\n  shl(0x20, tag_19)\n    /* \"contracts/TokenB_flattened.sol\":18424:18459  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/TokenB_flattened.sol\":18258:18466  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TokenB_flattened.sol\":16808:17915  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n    /* \"contracts/TokenB_flattened.sol\":16913:16914  0 */\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":16897:16915  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TokenB_flattened.sol\":16897:16901  from */\n  dup4\n    /* \"contracts/TokenB_flattened.sol\":16897:16915  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/TokenB_flattened.sol\":16893:17433  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"contracts/TokenB_flattened.sol\":17049:17054  value */\n  dup1\n    /* \"contracts/TokenB_flattened.sol\":17033:17045  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":17033:17054  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenB_flattened.sol\":16893:17433  if (from == address(0)) {... */\n  jump(tag_24)\ntag_21:\n    /* \"contracts/TokenB_flattened.sol\":17085:17104  uint256 fromBalance */\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":17107:17116  _balances */\n  dup1\n    /* \"contracts/TokenB_flattened.sol\":17107:17122  _balances[from] */\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":17117:17121  from */\n  dup6\n    /* \"contracts/TokenB_flattened.sol\":17107:17122  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/TokenB_flattened.sol\":17085:17122  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/TokenB_flattened.sol\":17154:17159  value */\n  dup2\n    /* \"contracts/TokenB_flattened.sol\":17140:17151  fromBalance */\n  dup2\n    /* \"contracts/TokenB_flattened.sol\":17140:17159  fromBalance < value */\n  lt\n    /* \"contracts/TokenB_flattened.sol\":17136:17251  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"contracts/TokenB_flattened.sol\":17211:17215  from */\n  dup4\n    /* \"contracts/TokenB_flattened.sol\":17217:17228  fromBalance */\n  dup2\n    /* \"contracts/TokenB_flattened.sol\":17230:17235  value */\n  dup4\n    /* \"contracts/TokenB_flattened.sol\":17186:17236  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/TokenB_flattened.sol\":17136:17251  if (fromBalance < value) {... */\ntag_25:\n    /* \"contracts/TokenB_flattened.sol\":17403:17408  value */\n  dup2\n    /* \"contracts/TokenB_flattened.sol\":17389:17400  fromBalance */\n  dup2\n    /* \"contracts/TokenB_flattened.sol\":17389:17408  fromBalance - value */\n  sub\n    /* \"contracts/TokenB_flattened.sol\":17371:17380  _balances */\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":17371:17386  _balances[from] */\n  dup1\n    /* \"contracts/TokenB_flattened.sol\":17381:17385  from */\n  dup7\n    /* \"contracts/TokenB_flattened.sol\":17371:17386  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/TokenB_flattened.sol\":17371:17408  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenB_flattened.sol\":17071:17433  {... */\n  pop\n    /* \"contracts/TokenB_flattened.sol\":16893:17433  if (from == address(0)) {... */\ntag_24:\n    /* \"contracts/TokenB_flattened.sol\":17461:17462  0 */\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":17447:17463  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TokenB_flattened.sol\":17447:17449  to */\n  dup3\n    /* \"contracts/TokenB_flattened.sol\":17447:17463  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/TokenB_flattened.sol\":17443:17868  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"contracts/TokenB_flattened.sol\":17626:17631  value */\n  dup1\n    /* \"contracts/TokenB_flattened.sol\":17610:17622  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":17610:17631  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenB_flattened.sol\":17443:17868  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n    /* \"contracts/TokenB_flattened.sol\":17838:17843  value */\n  dup1\n    /* \"contracts/TokenB_flattened.sol\":17821:17830  _balances */\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":17821:17834  _balances[to] */\n  dup1\n    /* \"contracts/TokenB_flattened.sol\":17831:17833  to */\n  dup5\n    /* \"contracts/TokenB_flattened.sol\":17821:17834  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/TokenB_flattened.sol\":17821:17843  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenB_flattened.sol\":17443:17868  if (to == address(0)) {... */\ntag_29:\n    /* \"contracts/TokenB_flattened.sol\":17898:17900  to */\n  dup2\n    /* \"contracts/TokenB_flattened.sol\":17883:17908  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TokenB_flattened.sol\":17892:17896  from */\n  dup4\n    /* \"contracts/TokenB_flattened.sol\":17883:17908  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/TokenB_flattened.sol\":17902:17907  value */\n  dup4\n    /* \"contracts/TokenB_flattened.sol\":17883:17908  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/TokenB_flattened.sol\":16808:17915  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_33:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_35:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_36:\n    /* \"#utility.yul\":490:514   */\n  tag_68\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_35\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_69:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_37:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_71\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_36\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_74\n  tag_33\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":781:900   */\ntag_73:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_75\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_37\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_38:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_39:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_40:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_41:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_80:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_82\n  tag_40\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1758:1842   */\ntag_81:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_42:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_43:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_44:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_45:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_87\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_44\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2473:2512   */\n  tag_88\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_44\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_46:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_47:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_91\n    /* \"#utility.yul\":2779:2813   */\n  tag_92\n    /* \"#utility.yul\":2788:2812   */\n  tag_93\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_35\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2779:2813   */\n  tag_46\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2761:2814   */\n  tag_35\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_48:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_49:\n    /* \"#utility.yul\":3017:3056   */\n  tag_96\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_47\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3078:3169   */\n  tag_97\n    /* \"#utility.yul\":3127:3168   */\n  tag_98\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_48\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_45\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_50:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_51:\n    /* \"#utility.yul\":3338:3370   */\n  tag_101\n  tag_50\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3379:3444   */\n  tag_102\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_49\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_52:\n    /* \"#utility.yul\":3516:3636   */\ntag_104:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_107\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_51\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_104)\ntag_106:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_53:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_110\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_42\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3867:3896   */\n  tag_111\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_43\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_112:\n    /* \"#utility.yul\":4094:4174   */\n  tag_113\n    /* \"#utility.yul\":4150:4172   */\n  tag_114\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_52\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_109:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_54:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_55:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_117\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_54\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_56:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_119\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_55\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_8:\n    /* \"#utility.yul\":4911:4948   */\n  tag_121\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_38\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_123\n  tag_39\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4999:5055   */\ntag_122:\n    /* \"#utility.yul\":5079:5117   */\n  tag_124\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_41\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5164:5231   */\n  tag_125\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_53\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_127\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_128:\n    /* \"#utility.yul\":6105:6172   */\n  tag_129\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_56\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_126)\n    /* \"#utility.yul\":5326:5944   */\ntag_127:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_130\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_42\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_131:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_131)\ntag_133:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_135\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_55\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_134:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_126:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6321   */\ntag_57:\n    /* \"#utility.yul\":6232:6239   */\n  0x00\n    /* \"#utility.yul\":6272:6314   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6265:6270   */\n  dup3\n    /* \"#utility.yul\":6261:6315   */\n  and\n    /* \"#utility.yul\":6250:6315   */\n  swap1\n  pop\n    /* \"#utility.yul\":6195:6321   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6423   */\ntag_58:\n    /* \"#utility.yul\":6364:6371   */\n  0x00\n    /* \"#utility.yul\":6393:6417   */\n  tag_138\n    /* \"#utility.yul\":6411:6416   */\n  dup3\n    /* \"#utility.yul\":6393:6417   */\n  tag_57\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6382:6417   */\n  swap1\n  pop\n    /* \"#utility.yul\":6327:6423   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_59:\n    /* \"#utility.yul\":6516:6540   */\n  tag_140\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_58\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_17:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_142\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_59\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_60:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7158   */\ntag_23:\n    /* \"#utility.yul\":7007:7010   */\n  0x00\n    /* \"#utility.yul\":7026:7046   */\n  tag_145\n    /* \"#utility.yul\":7044:7045   */\n  dup3\n    /* \"#utility.yul\":7026:7046   */\n  tag_35\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":7021:7046   */\n  swap2\n  pop\n    /* \"#utility.yul\":7060:7080   */\n  tag_146\n    /* \"#utility.yul\":7078:7079   */\n  dup4\n    /* \"#utility.yul\":7060:7080   */\n  tag_35\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7055:7080   */\n  swap3\n  pop\n    /* \"#utility.yul\":7103:7104   */\n  dup3\n    /* \"#utility.yul\":7100:7101   */\n  dup3\n    /* \"#utility.yul\":7096:7105   */\n  add\n    /* \"#utility.yul\":7089:7105   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7127   */\n  dup1\n    /* \"#utility.yul\":7121:7122   */\n  dup3\n    /* \"#utility.yul\":7118:7128   */\n  gt\n    /* \"#utility.yul\":7115:7151   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":7131:7149   */\n  tag_148\n  tag_60\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7115:7151   */\ntag_147:\n    /* \"#utility.yul\":6967:7158   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7164:7282   */\ntag_61:\n    /* \"#utility.yul\":7251:7275   */\n  tag_150\n    /* \"#utility.yul\":7269:7274   */\n  dup2\n    /* \"#utility.yul\":7251:7275   */\n  tag_35\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7246:7249   */\n  dup3\n    /* \"#utility.yul\":7239:7276   */\n  mstore\n    /* \"#utility.yul\":7164:7282   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7288:7730   */\ntag_27:\n    /* \"#utility.yul\":7437:7441   */\n  0x00\n    /* \"#utility.yul\":7475:7477   */\n  0x60\n    /* \"#utility.yul\":7464:7473   */\n  dup3\n    /* \"#utility.yul\":7460:7478   */\n  add\n    /* \"#utility.yul\":7452:7478   */\n  swap1\n  pop\n    /* \"#utility.yul\":7488:7559   */\n  tag_152\n    /* \"#utility.yul\":7556:7557   */\n  0x00\n    /* \"#utility.yul\":7545:7554   */\n  dup4\n    /* \"#utility.yul\":7541:7558   */\n  add\n    /* \"#utility.yul\":7532:7538   */\n  dup7\n    /* \"#utility.yul\":7488:7559   */\n  tag_59\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7569:7641   */\n  tag_153\n    /* \"#utility.yul\":7637:7639   */\n  0x20\n    /* \"#utility.yul\":7626:7635   */\n  dup4\n    /* \"#utility.yul\":7622:7640   */\n  add\n    /* \"#utility.yul\":7613:7619   */\n  dup6\n    /* \"#utility.yul\":7569:7641   */\n  tag_61\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7651:7723   */\n  tag_154\n    /* \"#utility.yul\":7719:7721   */\n  0x40\n    /* \"#utility.yul\":7708:7717   */\n  dup4\n    /* \"#utility.yul\":7704:7722   */\n  add\n    /* \"#utility.yul\":7695:7701   */\n  dup5\n    /* \"#utility.yul\":7651:7723   */\n  tag_61\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7288:7730   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:7958   */\ntag_31:\n    /* \"#utility.yul\":7829:7833   */\n  0x00\n    /* \"#utility.yul\":7867:7869   */\n  0x20\n    /* \"#utility.yul\":7856:7865   */\n  dup3\n    /* \"#utility.yul\":7852:7870   */\n  add\n    /* \"#utility.yul\":7844:7870   */\n  swap1\n  pop\n    /* \"#utility.yul\":7880:7951   */\n  tag_156\n    /* \"#utility.yul\":7948:7949   */\n  0x00\n    /* \"#utility.yul\":7937:7946   */\n  dup4\n    /* \"#utility.yul\":7933:7950   */\n  add\n    /* \"#utility.yul\":7924:7930   */\n  dup5\n    /* \"#utility.yul\":7880:7951   */\n  tag_61\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7736:7958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TokenB_flattened.sol\":22880:23020  contract TokenB is ERC20 {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TokenB_flattened.sol\":22880:23020  contract TokenB is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TokenB_flattened.sol\":12579:12668  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenB_flattened.sol\":14798:14984  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenB_flattened.sol\":13649:13746  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenB_flattened.sol\":15576:15820  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenB_flattened.sol\":13507:13589  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenB_flattened.sol\":13804:13920  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenB_flattened.sol\":12781:12874  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenB_flattened.sol\":14115:14293  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenB_flattened.sol\":14351:14491  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenB_flattened.sol\":12579:12668  function name() public view virtual returns (string memory) {... */\n    tag_14:\n        /* \"contracts/TokenB_flattened.sol\":12624:12637  string memory */\n      0x60\n        /* \"contracts/TokenB_flattened.sol\":12656:12661  _name */\n      0x03\n        /* \"contracts/TokenB_flattened.sol\":12649:12661  return _name */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":12579:12668  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":14798:14984  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n        /* \"contracts/TokenB_flattened.sol\":14871:14875  bool */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":14887:14900  address owner */\n      dup1\n        /* \"contracts/TokenB_flattened.sol\":14903:14915  _msgSender() */\n      tag_61\n        /* \"contracts/TokenB_flattened.sol\":14903:14913  _msgSender */\n      tag_62\n        /* \"contracts/TokenB_flattened.sol\":14903:14915  _msgSender() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/TokenB_flattened.sol\":14887:14915  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":14925:14956  _approve(owner, spender, value) */\n      tag_63\n        /* \"contracts/TokenB_flattened.sol\":14934:14939  owner */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":14941:14948  spender */\n      dup6\n        /* \"contracts/TokenB_flattened.sol\":14950:14955  value */\n      dup6\n        /* \"contracts/TokenB_flattened.sol\":14925:14933  _approve */\n      tag_64\n        /* \"contracts/TokenB_flattened.sol\":14925:14956  _approve(owner, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/TokenB_flattened.sol\":14973:14977  true */\n      0x01\n        /* \"contracts/TokenB_flattened.sol\":14966:14977  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/TokenB_flattened.sol\":14798:14984  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":13649:13746  function totalSupply() public view virtual returns (uint256) {... */\n    tag_24:\n        /* \"contracts/TokenB_flattened.sol\":13701:13708  uint256 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":13727:13739  _totalSupply */\n      sload(0x02)\n        /* \"contracts/TokenB_flattened.sol\":13720:13739  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":13649:13746  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":15576:15820  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"contracts/TokenB_flattened.sol\":15663:15667  bool */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":15679:15694  address spender */\n      dup1\n        /* \"contracts/TokenB_flattened.sol\":15697:15709  _msgSender() */\n      tag_67\n        /* \"contracts/TokenB_flattened.sol\":15697:15707  _msgSender */\n      tag_62\n        /* \"contracts/TokenB_flattened.sol\":15697:15709  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"contracts/TokenB_flattened.sol\":15679:15709  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":15719:15756  _spendAllowance(from, spender, value) */\n      tag_68\n        /* \"contracts/TokenB_flattened.sol\":15735:15739  from */\n      dup6\n        /* \"contracts/TokenB_flattened.sol\":15741:15748  spender */\n      dup3\n        /* \"contracts/TokenB_flattened.sol\":15750:15755  value */\n      dup6\n        /* \"contracts/TokenB_flattened.sol\":15719:15734  _spendAllowance */\n      tag_69\n        /* \"contracts/TokenB_flattened.sol\":15719:15756  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/TokenB_flattened.sol\":15766:15792  _transfer(from, to, value) */\n      tag_70\n        /* \"contracts/TokenB_flattened.sol\":15776:15780  from */\n      dup6\n        /* \"contracts/TokenB_flattened.sol\":15782:15784  to */\n      dup6\n        /* \"contracts/TokenB_flattened.sol\":15786:15791  value */\n      dup6\n        /* \"contracts/TokenB_flattened.sol\":15766:15775  _transfer */\n      tag_71\n        /* \"contracts/TokenB_flattened.sol\":15766:15792  _transfer(from, to, value) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/TokenB_flattened.sol\":15809:15813  true */\n      0x01\n        /* \"contracts/TokenB_flattened.sol\":15802:15813  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/TokenB_flattened.sol\":15576:15820  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":13507:13589  function decimals() public view virtual returns (uint8) {... */\n    tag_33:\n        /* \"contracts/TokenB_flattened.sol\":13556:13561  uint8 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":13580:13582  18 */\n      0x12\n        /* \"contracts/TokenB_flattened.sol\":13573:13582  return 18 */\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":13507:13589  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":13804:13920  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_39:\n        /* \"contracts/TokenB_flattened.sol\":13869:13876  uint256 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":13895:13904  _balances */\n      dup1\n        /* \"contracts/TokenB_flattened.sol\":13895:13913  _balances[account] */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":13905:13912  account */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":13895:13913  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TokenB_flattened.sol\":13888:13913  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":13804:13920  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":12781:12874  function symbol() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"contracts/TokenB_flattened.sol\":12828:12841  string memory */\n      0x60\n        /* \"contracts/TokenB_flattened.sol\":12860:12867  _symbol */\n      0x04\n        /* \"contracts/TokenB_flattened.sol\":12853:12867  return _symbol */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_55\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_55\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":12781:12874  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":14115:14293  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"contracts/TokenB_flattened.sol\":14184:14188  bool */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":14200:14213  address owner */\n      dup1\n        /* \"contracts/TokenB_flattened.sol\":14216:14228  _msgSender() */\n      tag_81\n        /* \"contracts/TokenB_flattened.sol\":14216:14226  _msgSender */\n      tag_62\n        /* \"contracts/TokenB_flattened.sol\":14216:14228  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/TokenB_flattened.sol\":14200:14228  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":14238:14265  _transfer(owner, to, value) */\n      tag_82\n        /* \"contracts/TokenB_flattened.sol\":14248:14253  owner */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":14255:14257  to */\n      dup6\n        /* \"contracts/TokenB_flattened.sol\":14259:14264  value */\n      dup6\n        /* \"contracts/TokenB_flattened.sol\":14238:14247  _transfer */\n      tag_71\n        /* \"contracts/TokenB_flattened.sol\":14238:14265  _transfer(owner, to, value) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/TokenB_flattened.sol\":14282:14286  true */\n      0x01\n        /* \"contracts/TokenB_flattened.sol\":14275:14286  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/TokenB_flattened.sol\":14115:14293  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":14351:14491  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"contracts/TokenB_flattened.sol\":14431:14438  uint256 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":14457:14468  _allowances */\n      0x01\n        /* \"contracts/TokenB_flattened.sol\":14457:14475  _allowances[owner] */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":14469:14474  owner */\n      dup5\n        /* \"contracts/TokenB_flattened.sol\":14457:14475  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenB_flattened.sol\":14457:14484  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":14476:14483  spender */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":14457:14484  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TokenB_flattened.sol\":14450:14484  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":14351:14491  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":4162:4258  function _msgSender() internal view virtual returns (address) {... */\n    tag_62:\n        /* \"contracts/TokenB_flattened.sol\":4215:4222  address */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":4241:4251  msg.sender */\n      caller\n        /* \"contracts/TokenB_flattened.sol\":4234:4251  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":4162:4258  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":19526:19654  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"contracts/TokenB_flattened.sol\":19610:19647  _approve(owner, spender, value, true) */\n      tag_86\n        /* \"contracts/TokenB_flattened.sol\":19619:19624  owner */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":19626:19633  spender */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":19635:19640  value */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":19642:19646  true */\n      0x01\n        /* \"contracts/TokenB_flattened.sol\":19610:19618  _approve */\n      tag_87\n        /* \"contracts/TokenB_flattened.sol\":19610:19647  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/TokenB_flattened.sol\":19526:19654  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":21215:21692  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_69:\n        /* \"contracts/TokenB_flattened.sol\":21314:21338  uint256 currentAllowance */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":21341:21366  allowance(owner, spender) */\n      tag_89\n        /* \"contracts/TokenB_flattened.sol\":21351:21356  owner */\n      dup5\n        /* \"contracts/TokenB_flattened.sol\":21358:21365  spender */\n      dup5\n        /* \"contracts/TokenB_flattened.sol\":21341:21350  allowance */\n      tag_51\n        /* \"contracts/TokenB_flattened.sol\":21341:21366  allowance(owner, spender) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/TokenB_flattened.sol\":21314:21366  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":21400:21417  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/TokenB_flattened.sol\":21380:21396  currentAllowance */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":21380:21417  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/TokenB_flattened.sol\":21376:21686  if (currentAllowance != type(uint256).max) {... */\n      tag_90\n      jumpi\n        /* \"contracts/TokenB_flattened.sol\":21456:21461  value */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":21437:21453  currentAllowance */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":21437:21461  currentAllowance < value */\n      lt\n        /* \"contracts/TokenB_flattened.sol\":21433:21563  if (currentAllowance < value) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/TokenB_flattened.sol\":21515:21522  spender */\n      dup3\n        /* \"contracts/TokenB_flattened.sol\":21524:21540  currentAllowance */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":21542:21547  value */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":21488:21548  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TokenB_flattened.sol\":21433:21563  if (currentAllowance < value) {... */\n    tag_91:\n        /* \"contracts/TokenB_flattened.sol\":21604:21661  _approve(owner, spender, currentAllowance - value, false) */\n      tag_94\n        /* \"contracts/TokenB_flattened.sol\":21613:21618  owner */\n      dup5\n        /* \"contracts/TokenB_flattened.sol\":21620:21627  spender */\n      dup5\n        /* \"contracts/TokenB_flattened.sol\":21648:21653  value */\n      dup5\n        /* \"contracts/TokenB_flattened.sol\":21629:21645  currentAllowance */\n      dup5\n        /* \"contracts/TokenB_flattened.sol\":21629:21653  currentAllowance - value */\n      sub\n        /* \"contracts/TokenB_flattened.sol\":21655:21660  false */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":21604:21612  _approve */\n      tag_87\n        /* \"contracts/TokenB_flattened.sol\":21604:21661  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/TokenB_flattened.sol\":21376:21686  if (currentAllowance != type(uint256).max) {... */\n    tag_90:\n        /* \"contracts/TokenB_flattened.sol\":21304:21692  {... */\n      pop\n        /* \"contracts/TokenB_flattened.sol\":21215:21692  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":16193:16493  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_71:\n        /* \"contracts/TokenB_flattened.sol\":16292:16293  0 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":16276:16294  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenB_flattened.sol\":16276:16280  from */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":16276:16294  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/TokenB_flattened.sol\":16272:16358  if (from == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"contracts/TokenB_flattened.sol\":16344:16345  0 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":16317:16347  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TokenB_flattened.sol\":16272:16358  if (from == address(0)) {... */\n    tag_96:\n        /* \"contracts/TokenB_flattened.sol\":16385:16386  0 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":16371:16387  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenB_flattened.sol\":16371:16373  to */\n      dup3\n        /* \"contracts/TokenB_flattened.sol\":16371:16387  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/TokenB_flattened.sol\":16367:16453  if (to == address(0)) {... */\n      tag_99\n      jumpi\n        /* \"contracts/TokenB_flattened.sol\":16439:16440  0 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":16410:16442  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TokenB_flattened.sol\":16367:16453  if (to == address(0)) {... */\n    tag_99:\n        /* \"contracts/TokenB_flattened.sol\":16462:16486  _update(from, to, value) */\n      tag_101\n        /* \"contracts/TokenB_flattened.sol\":16470:16474  from */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":16476:16478  to */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":16480:16485  value */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":16462:16469  _update */\n      tag_102\n        /* \"contracts/TokenB_flattened.sol\":16462:16486  _update(from, to, value) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/TokenB_flattened.sol\":16193:16493  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":20501:20933  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_87:\n        /* \"contracts/TokenB_flattened.sol\":20630:20631  0 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":20613:20632  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenB_flattened.sol\":20613:20618  owner */\n      dup5\n        /* \"contracts/TokenB_flattened.sol\":20613:20632  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/TokenB_flattened.sol\":20609:20698  if (owner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"contracts/TokenB_flattened.sol\":20684:20685  0 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":20655:20687  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TokenB_flattened.sol\":20609:20698  if (owner == address(0)) {... */\n    tag_104:\n        /* \"contracts/TokenB_flattened.sol\":20730:20731  0 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":20711:20732  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenB_flattened.sol\":20711:20718  spender */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":20711:20732  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/TokenB_flattened.sol\":20707:20797  if (spender == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"contracts/TokenB_flattened.sol\":20783:20784  0 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":20755:20786  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TokenB_flattened.sol\":20707:20797  if (spender == address(0)) {... */\n    tag_106:\n        /* \"contracts/TokenB_flattened.sol\":20836:20841  value */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":20806:20817  _allowances */\n      0x01\n        /* \"contracts/TokenB_flattened.sol\":20806:20824  _allowances[owner] */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":20818:20823  owner */\n      dup7\n        /* \"contracts/TokenB_flattened.sol\":20806:20824  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenB_flattened.sol\":20806:20833  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":20825:20832  spender */\n      dup6\n        /* \"contracts/TokenB_flattened.sol\":20806:20833  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenB_flattened.sol\":20806:20841  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenB_flattened.sol\":20855:20864  emitEvent */\n      dup1\n        /* \"contracts/TokenB_flattened.sol\":20851:20927  if (emitEvent) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"contracts/TokenB_flattened.sol\":20901:20908  spender */\n      dup3\n        /* \"contracts/TokenB_flattened.sol\":20885:20916  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenB_flattened.sol\":20894:20899  owner */\n      dup5\n        /* \"contracts/TokenB_flattened.sol\":20885:20916  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/TokenB_flattened.sol\":20910:20915  value */\n      dup5\n        /* \"contracts/TokenB_flattened.sol\":20885:20916  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TokenB_flattened.sol\":20851:20927  if (emitEvent) {... */\n    tag_108:\n        /* \"contracts/TokenB_flattened.sol\":20501:20933  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenB_flattened.sol\":16808:17915  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_102:\n        /* \"contracts/TokenB_flattened.sol\":16913:16914  0 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":16897:16915  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenB_flattened.sol\":16897:16901  from */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":16897:16915  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/TokenB_flattened.sol\":16893:17433  if (from == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"contracts/TokenB_flattened.sol\":17049:17054  value */\n      dup1\n        /* \"contracts/TokenB_flattened.sol\":17033:17045  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":17033:17054  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenB_flattened.sol\":16893:17433  if (from == address(0)) {... */\n      jump(tag_114)\n    tag_111:\n        /* \"contracts/TokenB_flattened.sol\":17085:17104  uint256 fromBalance */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":17107:17116  _balances */\n      dup1\n        /* \"contracts/TokenB_flattened.sol\":17107:17122  _balances[from] */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":17117:17121  from */\n      dup6\n        /* \"contracts/TokenB_flattened.sol\":17107:17122  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TokenB_flattened.sol\":17085:17122  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/TokenB_flattened.sol\":17154:17159  value */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":17140:17151  fromBalance */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":17140:17159  fromBalance < value */\n      lt\n        /* \"contracts/TokenB_flattened.sol\":17136:17251  if (fromBalance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"contracts/TokenB_flattened.sol\":17211:17215  from */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":17217:17228  fromBalance */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":17230:17235  value */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":17186:17236  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TokenB_flattened.sol\":17136:17251  if (fromBalance < value) {... */\n    tag_115:\n        /* \"contracts/TokenB_flattened.sol\":17403:17408  value */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":17389:17400  fromBalance */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":17389:17408  fromBalance - value */\n      sub\n        /* \"contracts/TokenB_flattened.sol\":17371:17380  _balances */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":17371:17386  _balances[from] */\n      dup1\n        /* \"contracts/TokenB_flattened.sol\":17381:17385  from */\n      dup7\n        /* \"contracts/TokenB_flattened.sol\":17371:17386  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenB_flattened.sol\":17371:17408  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenB_flattened.sol\":17071:17433  {... */\n      pop\n        /* \"contracts/TokenB_flattened.sol\":16893:17433  if (from == address(0)) {... */\n    tag_114:\n        /* \"contracts/TokenB_flattened.sol\":17461:17462  0 */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":17447:17463  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenB_flattened.sol\":17447:17449  to */\n      dup3\n        /* \"contracts/TokenB_flattened.sol\":17447:17463  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/TokenB_flattened.sol\":17443:17868  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"contracts/TokenB_flattened.sol\":17626:17631  value */\n      dup1\n        /* \"contracts/TokenB_flattened.sol\":17610:17622  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":17610:17631  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenB_flattened.sol\":17443:17868  if (to == address(0)) {... */\n      jump(tag_118)\n    tag_117:\n        /* \"contracts/TokenB_flattened.sol\":17838:17843  value */\n      dup1\n        /* \"contracts/TokenB_flattened.sol\":17821:17830  _balances */\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":17821:17834  _balances[to] */\n      dup1\n        /* \"contracts/TokenB_flattened.sol\":17831:17833  to */\n      dup5\n        /* \"contracts/TokenB_flattened.sol\":17821:17834  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TokenB_flattened.sol\":17821:17843  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenB_flattened.sol\":17443:17868  if (to == address(0)) {... */\n    tag_118:\n        /* \"contracts/TokenB_flattened.sol\":17898:17900  to */\n      dup2\n        /* \"contracts/TokenB_flattened.sol\":17883:17908  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenB_flattened.sol\":17892:17896  from */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":17883:17908  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TokenB_flattened.sol\":17902:17907  value */\n      dup4\n        /* \"contracts/TokenB_flattened.sol\":17883:17908  Transfer(from, to, value) */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TokenB_flattened.sol\":16808:17915  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_120:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_121:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_122:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_123:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_124:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_149\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_120\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":711:782   */\n      tag_150\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_121\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_151\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_122\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":881:910   */\n      tag_152\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_123\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_16:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_154\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_124\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_126:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_128:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_129:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_160\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_128\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_130:\n        /* \"#utility.yul\":1876:1900   */\n      tag_162\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_129\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_163:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_131:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_165\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_130\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_132:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_133:\n        /* \"#utility.yul\":2232:2256   */\n      tag_168\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_132\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_169:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_134:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_171\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_133\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_19:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_174\n      tag_126\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2525:2644   */\n    tag_173:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_175\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_131\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_176\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_134\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_135:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_136:\n        /* \"#utility.yul\":3089:3110   */\n      tag_179\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_135\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_22:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_181\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_136\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_137:\n        /* \"#utility.yul\":3426:3450   */\n      tag_183\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_132\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_26:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_185\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_137\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_29:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_188\n      tag_126\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3801:3920   */\n    tag_187:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_189\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_131\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_190\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_131\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_191\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_134\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_138:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_139:\n        /* \"#utility.yul\":4491:4513   */\n      tag_194\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_138\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_35:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_196\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_139\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_38:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_199\n      tag_126\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4822:4941   */\n    tag_198:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_200\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_131\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5555   */\n    tag_50:\n        /* \"#utility.yul\":5149:5155   */\n      0x00\n        /* \"#utility.yul\":5157:5163   */\n      dup1\n        /* \"#utility.yul\":5206:5208   */\n      0x40\n        /* \"#utility.yul\":5194:5203   */\n      dup4\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_203\n      tag_126\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5174:5293   */\n    tag_202:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_204\n        /* \"#utility.yul\":5402:5409   */\n      dup6\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup7\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_131\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5347:5410   */\n      swap3\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5459:5461   */\n      0x20\n        /* \"#utility.yul\":5485:5538   */\n      tag_205\n        /* \"#utility.yul\":5530:5537   */\n      dup6\n        /* \"#utility.yul\":5521:5527   */\n      dup3\n        /* \"#utility.yul\":5510:5519   */\n      dup7\n        /* \"#utility.yul\":5506:5528   */\n      add\n        /* \"#utility.yul\":5485:5538   */\n      tag_131\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5475:5538   */\n      swap2\n      pop\n        /* \"#utility.yul\":5430:5548   */\n      pop\n        /* \"#utility.yul\":5081:5555   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5741   */\n    tag_140:\n        /* \"#utility.yul\":5609:5686   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5599:5687   */\n      mstore\n        /* \"#utility.yul\":5706:5710   */\n      0x22\n        /* \"#utility.yul\":5703:5704   */\n      0x04\n        /* \"#utility.yul\":5696:5711   */\n      mstore\n        /* \"#utility.yul\":5730:5734   */\n      0x24\n        /* \"#utility.yul\":5727:5728   */\n      0x00\n        /* \"#utility.yul\":5720:5735   */\n      revert\n        /* \"#utility.yul\":5747:6067   */\n    tag_55:\n        /* \"#utility.yul\":5791:5797   */\n      0x00\n        /* \"#utility.yul\":5828:5829   */\n      0x02\n        /* \"#utility.yul\":5822:5826   */\n      dup3\n        /* \"#utility.yul\":5818:5830   */\n      div\n        /* \"#utility.yul\":5808:5830   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5876   */\n      0x01\n        /* \"#utility.yul\":5869:5873   */\n      dup3\n        /* \"#utility.yul\":5865:5877   */\n      and\n        /* \"#utility.yul\":5896:5914   */\n      dup1\n        /* \"#utility.yul\":5886:5967   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":5952:5956   */\n      0x7f\n        /* \"#utility.yul\":5944:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5957   */\n      and\n        /* \"#utility.yul\":5930:5957   */\n      swap2\n      pop\n        /* \"#utility.yul\":5886:5967   */\n    tag_208:\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6006:6012   */\n      dup3\n        /* \"#utility.yul\":6003:6017   */\n      lt\n        /* \"#utility.yul\":5983:6001   */\n      dup2\n        /* \"#utility.yul\":5980:6018   */\n      sub\n        /* \"#utility.yul\":5977:6061   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":6033:6051   */\n      tag_210\n      tag_140\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5977:6061   */\n    tag_209:\n        /* \"#utility.yul\":5798:6067   */\n      pop\n        /* \"#utility.yul\":5747:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6191   */\n    tag_141:\n        /* \"#utility.yul\":6160:6184   */\n      tag_212\n        /* \"#utility.yul\":6178:6183   */\n      dup2\n        /* \"#utility.yul\":6160:6184   */\n      tag_129\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6155:6158   */\n      dup3\n        /* \"#utility.yul\":6148:6185   */\n      mstore\n        /* \"#utility.yul\":6073:6191   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6197:6639   */\n    tag_93:\n        /* \"#utility.yul\":6346:6350   */\n      0x00\n        /* \"#utility.yul\":6384:6386   */\n      0x60\n        /* \"#utility.yul\":6373:6382   */\n      dup3\n        /* \"#utility.yul\":6369:6387   */\n      add\n        /* \"#utility.yul\":6361:6387   */\n      swap1\n      pop\n        /* \"#utility.yul\":6397:6468   */\n      tag_214\n        /* \"#utility.yul\":6465:6466   */\n      0x00\n        /* \"#utility.yul\":6454:6463   */\n      dup4\n        /* \"#utility.yul\":6450:6467   */\n      add\n        /* \"#utility.yul\":6441:6447   */\n      dup7\n        /* \"#utility.yul\":6397:6468   */\n      tag_141\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6478:6550   */\n      tag_215\n        /* \"#utility.yul\":6546:6548   */\n      0x20\n        /* \"#utility.yul\":6535:6544   */\n      dup4\n        /* \"#utility.yul\":6531:6549   */\n      add\n        /* \"#utility.yul\":6522:6528   */\n      dup6\n        /* \"#utility.yul\":6478:6550   */\n      tag_137\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6560:6632   */\n      tag_216\n        /* \"#utility.yul\":6628:6630   */\n      0x40\n        /* \"#utility.yul\":6617:6626   */\n      dup4\n        /* \"#utility.yul\":6613:6631   */\n      add\n        /* \"#utility.yul\":6604:6610   */\n      dup5\n        /* \"#utility.yul\":6560:6632   */\n      tag_137\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6197:6639   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6645:6867   */\n    tag_98:\n        /* \"#utility.yul\":6738:6742   */\n      0x00\n        /* \"#utility.yul\":6776:6778   */\n      0x20\n        /* \"#utility.yul\":6765:6774   */\n      dup3\n        /* \"#utility.yul\":6761:6779   */\n      add\n        /* \"#utility.yul\":6753:6779   */\n      swap1\n      pop\n        /* \"#utility.yul\":6789:6860   */\n      tag_218\n        /* \"#utility.yul\":6857:6858   */\n      0x00\n        /* \"#utility.yul\":6846:6855   */\n      dup4\n        /* \"#utility.yul\":6842:6859   */\n      add\n        /* \"#utility.yul\":6833:6839   */\n      dup5\n        /* \"#utility.yul\":6789:6860   */\n      tag_141\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6645:6867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6873:7053   */\n    tag_142:\n        /* \"#utility.yul\":6921:6998   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6918:6919   */\n      0x00\n        /* \"#utility.yul\":6911:6999   */\n      mstore\n        /* \"#utility.yul\":7018:7022   */\n      0x11\n        /* \"#utility.yul\":7015:7016   */\n      0x04\n        /* \"#utility.yul\":7008:7023   */\n      mstore\n        /* \"#utility.yul\":7042:7046   */\n      0x24\n        /* \"#utility.yul\":7039:7040   */\n      0x00\n        /* \"#utility.yul\":7032:7047   */\n      revert\n        /* \"#utility.yul\":7059:7250   */\n    tag_113:\n        /* \"#utility.yul\":7099:7102   */\n      0x00\n        /* \"#utility.yul\":7118:7138   */\n      tag_221\n        /* \"#utility.yul\":7136:7137   */\n      dup3\n        /* \"#utility.yul\":7118:7138   */\n      tag_132\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7113:7138   */\n      swap2\n      pop\n        /* \"#utility.yul\":7152:7172   */\n      tag_222\n        /* \"#utility.yul\":7170:7171   */\n      dup4\n        /* \"#utility.yul\":7152:7172   */\n      tag_132\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7147:7172   */\n      swap3\n      pop\n        /* \"#utility.yul\":7195:7196   */\n      dup3\n        /* \"#utility.yul\":7192:7193   */\n      dup3\n        /* \"#utility.yul\":7188:7197   */\n      add\n        /* \"#utility.yul\":7181:7197   */\n      swap1\n      pop\n        /* \"#utility.yul\":7216:7219   */\n      dup1\n        /* \"#utility.yul\":7213:7214   */\n      dup3\n        /* \"#utility.yul\":7210:7220   */\n      gt\n        /* \"#utility.yul\":7207:7243   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":7223:7241   */\n      tag_224\n      tag_142\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7207:7243   */\n    tag_223:\n        /* \"#utility.yul\":7059:7250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a6aca3a7a4b4d78e067bda730d21bf5e57ad79b1da4b69c35d49e7ac2b3d712964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_304": {
									"entryPoint": null,
									"id": 304,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_786": {
									"entryPoint": null,
									"id": 786,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_607": {
									"entryPoint": 213,
									"id": 607,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_574": {
									"entryPoint": 346,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7961:1",
										"nodeType": "YulBlock",
										"src": "0:7961:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "608:80:1",
													"nodeType": "YulBlock",
													"src": "608:80:1",
													"statements": [
														{
															"nativeSrc": "618:22:1",
															"nodeType": "YulAssignment",
															"src": "618:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:1"
																},
																"nativeSrc": "627:13:1",
																"nodeType": "YulFunctionCall",
																"src": "627:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:1"
																},
																"nativeSrc": "649:33:1",
																"nodeType": "YulFunctionCall",
																"src": "649:33:1"
															},
															"nativeSrc": "649:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:1",
														"nodeType": "YulTypedName",
														"src": "586:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:1",
														"nodeType": "YulTypedName",
														"src": "594:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:1",
														"nodeType": "YulTypedName",
														"src": "602:5:1",
														"type": ""
													}
												],
												"src": "545:143:1"
											},
											{
												"body": {
													"nativeSrc": "771:274:1",
													"nodeType": "YulBlock",
													"src": "771:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:1",
																"nodeType": "YulBlock",
																"src": "817:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:1"
																			},
																			"nativeSrc": "819:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:1"
																		},
																		"nativeSrc": "819:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:1"
																		},
																		"nativeSrc": "788:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:1",
																		"nodeType": "YulLiteral",
																		"src": "813:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:1"
																},
																"nativeSrc": "784:32:1",
																"nodeType": "YulFunctionCall",
																"src": "784:32:1"
															},
															"nativeSrc": "781:119:1",
															"nodeType": "YulIf",
															"src": "781:119:1"
														},
														{
															"nativeSrc": "910:128:1",
															"nodeType": "YulBlock",
															"src": "910:128:1",
															"statements": [
																{
																	"nativeSrc": "925:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:1",
																		"nodeType": "YulLiteral",
																		"src": "939:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:1",
																			"nodeType": "YulTypedName",
																			"src": "929:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:1",
																	"nodeType": "YulAssignment",
																	"src": "954:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:1"
																				},
																				"nativeSrc": "996:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:1"
																		},
																		"nativeSrc": "964:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:1",
														"nodeType": "YulTypedName",
														"src": "741:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:1",
														"nodeType": "YulTypedName",
														"src": "752:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:1",
														"nodeType": "YulTypedName",
														"src": "764:6:1",
														"type": ""
													}
												],
												"src": "694:351:1"
											},
											{
												"body": {
													"nativeSrc": "1110:40:1",
													"nodeType": "YulBlock",
													"src": "1110:40:1",
													"statements": [
														{
															"nativeSrc": "1121:22:1",
															"nodeType": "YulAssignment",
															"src": "1121:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1137:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1131:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:1"
																},
																"nativeSrc": "1131:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1121:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1051:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1093:5:1",
														"nodeType": "YulTypedName",
														"src": "1093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1103:6:1",
														"nodeType": "YulTypedName",
														"src": "1103:6:1",
														"type": ""
													}
												],
												"src": "1051:99:1"
											},
											{
												"body": {
													"nativeSrc": "1184:152:1",
													"nodeType": "YulBlock",
													"src": "1184:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1201:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1204:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nativeSrc": "1194:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1194:88:1"
															},
															"nativeSrc": "1194:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1298:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:1"
																},
																"nativeSrc": "1291:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1291:15:1"
															},
															"nativeSrc": "1291:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1315:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:1"
																},
																"nativeSrc": "1315:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1315:15:1"
															},
															"nativeSrc": "1315:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1156:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:1"
											},
											{
												"body": {
													"nativeSrc": "1370:152:1",
													"nodeType": "YulBlock",
													"src": "1370:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1380:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:1"
																},
																"nativeSrc": "1380:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1380:88:1"
															},
															"nativeSrc": "1380:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1487:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:1"
																},
																"nativeSrc": "1477:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1477:15:1"
															},
															"nativeSrc": "1477:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1501:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:1"
																},
																"nativeSrc": "1501:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:1"
															},
															"nativeSrc": "1501:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1342:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:1"
											},
											{
												"body": {
													"nativeSrc": "1579:269:1",
													"nodeType": "YulBlock",
													"src": "1579:269:1",
													"statements": [
														{
															"nativeSrc": "1589:22:1",
															"nodeType": "YulAssignment",
															"src": "1589:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1603:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1599:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:1"
																},
																"nativeSrc": "1599:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1589:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:1"
																}
															]
														},
														{
															"nativeSrc": "1620:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1646:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:1"
																},
																"nativeSrc": "1646:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1646:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1624:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:51:1",
																"nodeType": "YulBlock",
																"src": "1697:51:1",
																"statements": [
																	{
																		"nativeSrc": "1711:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1711:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1725:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1733:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1721:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:1"
																			},
																			"nativeSrc": "1721:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1711:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1677:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1670:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:1"
																},
																"nativeSrc": "1670:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1670:26:1"
															},
															"nativeSrc": "1667:81:1",
															"nodeType": "YulIf",
															"src": "1667:81:1"
														},
														{
															"body": {
																"nativeSrc": "1800:42:1",
																"nodeType": "YulBlock",
																"src": "1800:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1814:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:1"
																			},
																			"nativeSrc": "1814:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:1"
																		},
																		"nativeSrc": "1814:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1764:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1787:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1795:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1784:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:1"
																		},
																		"nativeSrc": "1784:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1761:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:1"
																},
																"nativeSrc": "1761:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1761:38:1"
															},
															"nativeSrc": "1758:84:1",
															"nodeType": "YulIf",
															"src": "1758:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1528:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1563:4:1",
														"nodeType": "YulTypedName",
														"src": "1563:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:1",
														"nodeType": "YulTypedName",
														"src": "1572:6:1",
														"type": ""
													}
												],
												"src": "1528:320:1"
											},
											{
												"body": {
													"nativeSrc": "1908:87:1",
													"nodeType": "YulBlock",
													"src": "1908:87:1",
													"statements": [
														{
															"nativeSrc": "1918:11:1",
															"nodeType": "YulAssignment",
															"src": "1918:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:1",
																"nodeType": "YulIdentifier",
																"src": "1926:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:1"
																},
																"nativeSrc": "1939:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:1"
															},
															"nativeSrc": "1939:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:1"
														},
														{
															"nativeSrc": "1962:26:1",
															"nodeType": "YulAssignment",
															"src": "1962:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:1"
																},
																"nativeSrc": "1970:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:1",
														"nodeType": "YulTypedName",
														"src": "1895:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:1",
														"nodeType": "YulTypedName",
														"src": "1903:4:1",
														"type": ""
													}
												],
												"src": "1854:141:1"
											},
											{
												"body": {
													"nativeSrc": "2045:49:1",
													"nodeType": "YulBlock",
													"src": "2045:49:1",
													"statements": [
														{
															"nativeSrc": "2055:33:1",
															"nodeType": "YulAssignment",
															"src": "2055:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:1"
																		},
																		"nativeSrc": "2069:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:1"
																},
																"nativeSrc": "2065:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:1",
														"nodeType": "YulTypedName",
														"src": "2028:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:1",
														"nodeType": "YulTypedName",
														"src": "2038:6:1",
														"type": ""
													}
												],
												"src": "2001:93:1"
											},
											{
												"body": {
													"nativeSrc": "2153:54:1",
													"nodeType": "YulBlock",
													"src": "2153:54:1",
													"statements": [
														{
															"nativeSrc": "2163:37:1",
															"nodeType": "YulAssignment",
															"src": "2163:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:1"
																},
																"nativeSrc": "2184:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:1",
														"nodeType": "YulTypedName",
														"src": "2128:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:1",
														"nodeType": "YulTypedName",
														"src": "2134:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:1",
														"nodeType": "YulTypedName",
														"src": "2144:8:1",
														"type": ""
													}
												],
												"src": "2100:107:1"
											},
											{
												"body": {
													"nativeSrc": "2289:317:1",
													"nodeType": "YulBlock",
													"src": "2289:317:1",
													"statements": [
														{
															"nativeSrc": "2299:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:1"
																},
																"nativeSrc": "2316:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:1"
																},
																"nativeSrc": "2355:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:1",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:1",
															"nodeType": "YulAssignment",
															"src": "2461:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:1"
																},
																"nativeSrc": "2473:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:1"
																}
															]
														},
														{
															"nativeSrc": "2521:30:1",
															"nodeType": "YulAssignment",
															"src": "2521:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:1"
																		},
																		"nativeSrc": "2541:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:1"
																},
																"nativeSrc": "2530:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:1"
																}
															]
														},
														{
															"nativeSrc": "2560:40:1",
															"nodeType": "YulAssignment",
															"src": "2560:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:1"
																		},
																		"nativeSrc": "2580:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:1"
																},
																"nativeSrc": "2570:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:1",
														"nodeType": "YulTypedName",
														"src": "2250:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:1",
														"nodeType": "YulTypedName",
														"src": "2257:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:1",
														"nodeType": "YulTypedName",
														"src": "2269:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:1",
														"nodeType": "YulTypedName",
														"src": "2282:6:1",
														"type": ""
													}
												],
												"src": "2213:393:1"
											},
											{
												"body": {
													"nativeSrc": "2644:28:1",
													"nodeType": "YulBlock",
													"src": "2644:28:1",
													"statements": [
														{
															"nativeSrc": "2654:12:1",
															"nodeType": "YulAssignment",
															"src": "2654:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:1",
																"nodeType": "YulIdentifier",
																"src": "2661:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:1",
														"nodeType": "YulTypedName",
														"src": "2630:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:1",
														"nodeType": "YulTypedName",
														"src": "2640:3:1",
														"type": ""
													}
												],
												"src": "2612:60:1"
											},
											{
												"body": {
													"nativeSrc": "2738:82:1",
													"nodeType": "YulBlock",
													"src": "2738:82:1",
													"statements": [
														{
															"nativeSrc": "2748:66:1",
															"nodeType": "YulAssignment",
															"src": "2748:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:1"
																				},
																				"nativeSrc": "2788:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:1"
																		},
																		"nativeSrc": "2779:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:1"
																},
																"nativeSrc": "2761:53:1",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:1",
														"nodeType": "YulTypedName",
														"src": "2718:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:1",
														"nodeType": "YulTypedName",
														"src": "2728:9:1",
														"type": ""
													}
												],
												"src": "2678:142:1"
											},
											{
												"body": {
													"nativeSrc": "2873:28:1",
													"nodeType": "YulBlock",
													"src": "2873:28:1",
													"statements": [
														{
															"nativeSrc": "2883:12:1",
															"nodeType": "YulAssignment",
															"src": "2883:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:1",
																"nodeType": "YulIdentifier",
																"src": "2890:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:1",
														"nodeType": "YulTypedName",
														"src": "2859:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:1",
														"nodeType": "YulTypedName",
														"src": "2869:3:1",
														"type": ""
													}
												],
												"src": "2826:75:1"
											},
											{
												"body": {
													"nativeSrc": "2983:193:1",
													"nodeType": "YulBlock",
													"src": "2983:193:1",
													"statements": [
														{
															"nativeSrc": "2993:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:1"
																},
																"nativeSrc": "3017:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:1"
																				},
																				"nativeSrc": "3106:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:1"
																				},
																				"nativeSrc": "3127:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:1"
																		},
																		"nativeSrc": "3078:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:1"
																},
																"nativeSrc": "3065:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:1"
															},
															"nativeSrc": "3065:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:1",
														"nodeType": "YulTypedName",
														"src": "2960:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:1",
														"nodeType": "YulTypedName",
														"src": "2966:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:1",
														"nodeType": "YulTypedName",
														"src": "2974:7:1",
														"type": ""
													}
												],
												"src": "2907:269:1"
											},
											{
												"body": {
													"nativeSrc": "3231:24:1",
													"nodeType": "YulBlock",
													"src": "3231:24:1",
													"statements": [
														{
															"nativeSrc": "3241:8:1",
															"nodeType": "YulAssignment",
															"src": "3241:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:1",
																"nodeType": "YulLiteral",
																"src": "3248:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:1",
														"nodeType": "YulTypedName",
														"src": "3227:3:1",
														"type": ""
													}
												],
												"src": "3182:73:1"
											},
											{
												"body": {
													"nativeSrc": "3314:136:1",
													"nodeType": "YulBlock",
													"src": "3314:136:1",
													"statements": [
														{
															"nativeSrc": "3324:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:1"
																},
																"nativeSrc": "3338:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:1"
																},
																"nativeSrc": "3379:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:1"
															},
															"nativeSrc": "3379:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:1",
														"nodeType": "YulTypedName",
														"src": "3300:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:1",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"src": "3261:189:1"
											},
											{
												"body": {
													"nativeSrc": "3506:136:1",
													"nodeType": "YulBlock",
													"src": "3506:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:1",
																"nodeType": "YulBlock",
																"src": "3573:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:1"
																			},
																			"nativeSrc": "3587:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:1"
																		},
																		"nativeSrc": "3587:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:1"
																},
																"nativeSrc": "3523:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:1"
															},
															"nativeSrc": "3516:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:1",
																"nodeType": "YulBlock",
																"src": "3538:26:1",
																"statements": [
																	{
																		"nativeSrc": "3540:22:1",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:1"
																			},
																			"nativeSrc": "3549:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:1",
																"nodeType": "YulBlock",
																"src": "3520:2:1",
																"statements": []
															},
															"src": "3516:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:1",
														"nodeType": "YulTypedName",
														"src": "3494:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:1",
														"nodeType": "YulTypedName",
														"src": "3501:3:1",
														"type": ""
													}
												],
												"src": "3456:186:1"
											},
											{
												"body": {
													"nativeSrc": "3727:464:1",
													"nodeType": "YulBlock",
													"src": "3727:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:1",
																"nodeType": "YulBlock",
																"src": "3753:431:1",
																"statements": [
																	{
																		"nativeSrc": "3767:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:1"
																			},
																			"nativeSrc": "3783:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:1",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:1"
																					},
																					"nativeSrc": "3867:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:1"
																			},
																			"nativeSrc": "3853:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:1",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:1",
																			"nodeType": "YulBlock",
																			"src": "4054:27:1",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:1",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:1"
																			},
																			"nativeSrc": "4035:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:1"
																		},
																		"nativeSrc": "4032:49:1",
																		"nodeType": "YulIf",
																		"src": "4032:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:1"
																							},
																							"nativeSrc": "4150:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:1"
																					},
																					"nativeSrc": "4136:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:1"
																			},
																			"nativeSrc": "4094:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:1"
																		},
																		"nativeSrc": "4094:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:1"
																},
																"nativeSrc": "3741:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:1"
															},
															"nativeSrc": "3738:446:1",
															"nodeType": "YulIf",
															"src": "3738:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:1",
														"nodeType": "YulTypedName",
														"src": "3703:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:1",
														"nodeType": "YulTypedName",
														"src": "3710:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:1",
														"nodeType": "YulTypedName",
														"src": "3715:10:1",
														"type": ""
													}
												],
												"src": "3648:543:1"
											},
											{
												"body": {
													"nativeSrc": "4260:54:1",
													"nodeType": "YulBlock",
													"src": "4260:54:1",
													"statements": [
														{
															"nativeSrc": "4270:37:1",
															"nodeType": "YulAssignment",
															"src": "4270:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:1"
																},
																"nativeSrc": "4291:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:1",
														"nodeType": "YulTypedName",
														"src": "4235:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:1",
														"nodeType": "YulTypedName",
														"src": "4241:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:1",
														"nodeType": "YulTypedName",
														"src": "4251:8:1",
														"type": ""
													}
												],
												"src": "4197:117:1"
											},
											{
												"body": {
													"nativeSrc": "4371:118:1",
													"nodeType": "YulBlock",
													"src": "4371:118:1",
													"statements": [
														{
															"nativeSrc": "4381:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:1"
																				},
																				"nativeSrc": "4426:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:1"
																				},
																				"nativeSrc": "4441:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:1"
																		},
																		"nativeSrc": "4397:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:1"
																},
																"nativeSrc": "4393:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:1",
															"nodeType": "YulAssignment",
															"src": "4458:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:1"
																},
																"nativeSrc": "4468:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:1",
														"nodeType": "YulTypedName",
														"src": "4348:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:1",
														"nodeType": "YulTypedName",
														"src": "4354:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:1",
														"nodeType": "YulTypedName",
														"src": "4364:6:1",
														"type": ""
													}
												],
												"src": "4320:169:1"
											},
											{
												"body": {
													"nativeSrc": "4575:214:1",
													"nodeType": "YulBlock",
													"src": "4575:214:1",
													"statements": [
														{
															"nativeSrc": "4708:37:1",
															"nodeType": "YulAssignment",
															"src": "4708:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:1"
																},
																"nativeSrc": "4716:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:1"
																}
															]
														},
														{
															"nativeSrc": "4754:29:1",
															"nodeType": "YulAssignment",
															"src": "4754:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:1"
																		},
																		"nativeSrc": "4771:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:1"
																},
																"nativeSrc": "4762:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:1",
														"nodeType": "YulTypedName",
														"src": "4556:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:1",
														"nodeType": "YulTypedName",
														"src": "4562:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:1",
														"nodeType": "YulTypedName",
														"src": "4570:4:1",
														"type": ""
													}
												],
												"src": "4494:295:1"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:1",
													"nodeType": "YulBlock",
													"src": "4886:1303:1",
													"statements": [
														{
															"nativeSrc": "4897:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:1"
																},
																"nativeSrc": "4911:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:1",
																"nodeType": "YulBlock",
																"src": "5033:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:1"
																			},
																			"nativeSrc": "5035:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:1"
																		},
																		"nativeSrc": "5035:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:1"
																},
																"nativeSrc": "5002:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:1"
															},
															"nativeSrc": "4999:56:1",
															"nodeType": "YulIf",
															"src": "4999:56:1"
														},
														{
															"nativeSrc": "5065:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:1"
																		},
																		"nativeSrc": "5105:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:1"
																},
																"nativeSrc": "5079:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:1"
																},
																"nativeSrc": "5164:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:1"
															},
															"nativeSrc": "5164:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:1"
														},
														{
															"nativeSrc": "5241:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:1",
																"nodeType": "YulLiteral",
																"src": "5258:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:1",
															"nodeType": "YulAssignment",
															"src": "5269:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:1",
																"nodeType": "YulLiteral",
																"src": "5282:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:1",
																		"nodeType": "YulBlock",
																		"src": "5333:611:1",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:1",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:1"
																							},
																							"nativeSrc": "5374:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:1"
																					},
																					"nativeSrc": "5362:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:1",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:1"
																					},
																					"nativeSrc": "5412:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:1",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:1",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:1",
																					"nodeType": "YulBlock",
																					"src": "5530:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:1"
																												},
																												"nativeSrc": "5569:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:1"
																										},
																										"nativeSrc": "5563:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:1"
																								},
																								"nativeSrc": "5548:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:1"
																							},
																							"nativeSrc": "5548:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:1"
																						},
																						{
																							"nativeSrc": "5607:24:1",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:1",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:1"
																								},
																								"nativeSrc": "5617:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:1",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:1",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:1"
																								},
																								"nativeSrc": "5661:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:1"
																					},
																					"nativeSrc": "5493:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:1"
																				},
																				"nativeSrc": "5485:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:1",
																					"nodeType": "YulBlock",
																					"src": "5508:21:1",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:1",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:1",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:1"
																								},
																								"nativeSrc": "5515:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:1",
																					"nodeType": "YulBlock",
																					"src": "5489:3:1",
																					"statements": []
																				},
																				"src": "5485:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:1",
																					"nodeType": "YulBlock",
																					"src": "5729:156:1",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:1"
																										},
																										"nativeSrc": "5770:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:1"
																								},
																								"nativeSrc": "5764:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:1",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:1",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:1"
																												},
																												"nativeSrc": "5852:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:1"
																										},
																										"nativeSrc": "5822:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:1"
																								},
																								"nativeSrc": "5807:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:1"
																							},
																							"nativeSrc": "5807:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:1"
																					},
																					"nativeSrc": "5709:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:1"
																				},
																				"nativeSrc": "5706:179:1",
																				"nodeType": "YulIf",
																				"src": "5706:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:1",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:1"
																									},
																									"nativeSrc": "5915:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:1",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:1"
																							},
																							"nativeSrc": "5911:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:1"
																					},
																					"nativeSrc": "5898:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:1"
																				},
																				"nativeSrc": "5898:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:1"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:1",
																	"nodeType": "YulCase",
																	"src": "5326:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:1",
																		"nodeType": "YulBlock",
																		"src": "5961:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:1",
																					"nodeType": "YulBlock",
																					"src": "6012:67:1",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:1",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:1"
																										},
																										"nativeSrc": "6045:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:1"
																								},
																								"nativeSrc": "6039:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:1"
																				},
																				"nativeSrc": "6002:77:1",
																				"nodeType": "YulIf",
																				"src": "6002:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:1"
																							},
																							"nativeSrc": "6105:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:1"
																					},
																					"nativeSrc": "6092:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:1"
																				},
																				"nativeSrc": "6092:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:1"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:1",
																	"nodeType": "YulCase",
																	"src": "5953:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:1"
																},
																"nativeSrc": "5303:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:1"
															},
															"nativeSrc": "5296:887:1",
															"nodeType": "YulSwitch",
															"src": "5296:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:1",
														"nodeType": "YulTypedName",
														"src": "4875:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:1",
														"nodeType": "YulTypedName",
														"src": "4881:3:1",
														"type": ""
													}
												],
												"src": "4794:1395:1"
											},
											{
												"body": {
													"nativeSrc": "6240:81:1",
													"nodeType": "YulBlock",
													"src": "6240:81:1",
													"statements": [
														{
															"nativeSrc": "6250:65:1",
															"nodeType": "YulAssignment",
															"src": "6250:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6265:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6265:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6272:42:1",
																		"nodeType": "YulLiteral",
																		"src": "6272:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:1"
																},
																"nativeSrc": "6261:54:1",
																"nodeType": "YulFunctionCall",
																"src": "6261:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6250:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "6250:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6195:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6222:5:1",
														"nodeType": "YulTypedName",
														"src": "6222:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6232:7:1",
														"nodeType": "YulTypedName",
														"src": "6232:7:1",
														"type": ""
													}
												],
												"src": "6195:126:1"
											},
											{
												"body": {
													"nativeSrc": "6372:51:1",
													"nodeType": "YulBlock",
													"src": "6372:51:1",
													"statements": [
														{
															"nativeSrc": "6382:35:1",
															"nodeType": "YulAssignment",
															"src": "6382:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6411:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6411:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6393:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "6393:17:1"
																},
																"nativeSrc": "6393:24:1",
																"nodeType": "YulFunctionCall",
																"src": "6393:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6382:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "6382:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6327:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6354:5:1",
														"nodeType": "YulTypedName",
														"src": "6354:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6364:7:1",
														"nodeType": "YulTypedName",
														"src": "6364:7:1",
														"type": ""
													}
												],
												"src": "6327:96:1"
											},
											{
												"body": {
													"nativeSrc": "6494:53:1",
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nativeSrc": "6516:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nativeSrc": "6504:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nativeSrc": "6504:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:1",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:1",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nativeSrc": "6651:124:1",
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nativeSrc": "6661:26:1",
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nativeSrc": "6669:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nativeSrc": "6750:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nativeSrc": "6697:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nativeSrc": "6697:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:1",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:1",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:1",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											},
											{
												"body": {
													"nativeSrc": "6809:152:1",
													"nodeType": "YulBlock",
													"src": "6809:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:1"
																},
																"nativeSrc": "6819:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:1"
															},
															"nativeSrc": "6819:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:1"
																},
																"nativeSrc": "6916:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:1"
															},
															"nativeSrc": "6916:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:1"
																},
																"nativeSrc": "6940:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:1"
															},
															"nativeSrc": "6940:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:1"
											},
											{
												"body": {
													"nativeSrc": "7011:147:1",
													"nodeType": "YulBlock",
													"src": "7011:147:1",
													"statements": [
														{
															"nativeSrc": "7021:25:1",
															"nodeType": "YulAssignment",
															"src": "7021:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7026:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7026:17:1"
																},
																"nativeSrc": "7026:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7026:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7021:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7021:1:1"
																}
															]
														},
														{
															"nativeSrc": "7055:25:1",
															"nodeType": "YulAssignment",
															"src": "7055:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7078:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7078:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:1"
																},
																"nativeSrc": "7060:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7055:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7055:1:1"
																}
															]
														},
														{
															"nativeSrc": "7089:16:1",
															"nodeType": "YulAssignment",
															"src": "7089:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7103:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7103:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:1"
																},
																"nativeSrc": "7096:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7096:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7089:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7129:22:1",
																"nodeType": "YulBlock",
																"src": "7129:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7131:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7131:16:1"
																			},
																			"nativeSrc": "7131:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:18:1"
																		},
																		"nativeSrc": "7131:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7121:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7121:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7124:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7124:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7118:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7118:2:1"
																},
																"nativeSrc": "7118:10:1",
																"nodeType": "YulFunctionCall",
																"src": "7118:10:1"
															},
															"nativeSrc": "7115:36:1",
															"nodeType": "YulIf",
															"src": "7115:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6967:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:1",
														"nodeType": "YulTypedName",
														"src": "6998:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:1",
														"nodeType": "YulTypedName",
														"src": "7001:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7007:3:1",
														"nodeType": "YulTypedName",
														"src": "7007:3:1",
														"type": ""
													}
												],
												"src": "6967:191:1"
											},
											{
												"body": {
													"nativeSrc": "7229:53:1",
													"nodeType": "YulBlock",
													"src": "7229:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7246:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7246:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7269:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7269:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7251:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "7251:17:1"
																		},
																		"nativeSrc": "7251:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:1"
																},
																"nativeSrc": "7239:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7239:37:1"
															},
															"nativeSrc": "7239:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "7239:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7164:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7217:5:1",
														"nodeType": "YulTypedName",
														"src": "7217:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7224:3:1",
														"nodeType": "YulTypedName",
														"src": "7224:3:1",
														"type": ""
													}
												],
												"src": "7164:118:1"
											},
											{
												"body": {
													"nativeSrc": "7442:288:1",
													"nodeType": "YulBlock",
													"src": "7442:288:1",
													"statements": [
														{
															"nativeSrc": "7452:26:1",
															"nodeType": "YulAssignment",
															"src": "7452:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7464:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7464:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:1"
																},
																"nativeSrc": "7460:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7460:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7452:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7532:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7532:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:1"
																		},
																		"nativeSrc": "7541:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7488:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7488:43:1"
																},
																"nativeSrc": "7488:71:1",
																"nodeType": "YulFunctionCall",
																"src": "7488:71:1"
															},
															"nativeSrc": "7488:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "7488:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7613:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7613:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7637:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7622:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:1"
																		},
																		"nativeSrc": "7622:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7569:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7569:43:1"
																},
																"nativeSrc": "7569:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7569:72:1"
															},
															"nativeSrc": "7569:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7569:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7695:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7708:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7719:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7704:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:1"
																		},
																		"nativeSrc": "7704:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7651:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7651:43:1"
																},
																"nativeSrc": "7651:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7651:72:1"
															},
															"nativeSrc": "7651:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7651:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7288:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7398:9:1",
														"nodeType": "YulTypedName",
														"src": "7398:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7410:6:1",
														"nodeType": "YulTypedName",
														"src": "7410:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7418:6:1",
														"nodeType": "YulTypedName",
														"src": "7418:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7426:6:1",
														"nodeType": "YulTypedName",
														"src": "7426:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7437:4:1",
														"nodeType": "YulTypedName",
														"src": "7437:4:1",
														"type": ""
													}
												],
												"src": "7288:442:1"
											},
											{
												"body": {
													"nativeSrc": "7834:124:1",
													"nodeType": "YulBlock",
													"src": "7834:124:1",
													"statements": [
														{
															"nativeSrc": "7844:26:1",
															"nodeType": "YulAssignment",
															"src": "7844:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7856:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7867:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7852:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:1"
																},
																"nativeSrc": "7852:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7852:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7844:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7924:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7948:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7948:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7933:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:1"
																		},
																		"nativeSrc": "7933:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7880:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7880:43:1"
																},
																"nativeSrc": "7880:71:1",
																"nodeType": "YulFunctionCall",
																"src": "7880:71:1"
															},
															"nativeSrc": "7880:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "7880:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7736:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7806:9:1",
														"nodeType": "YulTypedName",
														"src": "7806:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7818:6:1",
														"nodeType": "YulTypedName",
														"src": "7818:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7829:4:1",
														"nodeType": "YulTypedName",
														"src": "7829:4:1",
														"type": ""
													}
												],
												"src": "7736:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516115d83803806115d8833981810160405281019061003191906103aa565b6040518060400160405280600681526020017f546f6b656e4200000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544b42000000000000000000000000000000000000000000000000000000000081525081600390816100ac9190610606565b5080600490816100bc9190610606565b5050506100cf33826100d560201b60201c565b506107ea565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610145575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161013c9190610714565b60405180910390fd5b6101565f838361015a60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101aa578060025f82825461019e919061075a565b92505081905550610278565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610233578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161022a9392919061079c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102bf578060025f8282540392505081905550610309565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161036691906107d1565b60405180910390a3505050565b5f80fd5b5f819050919050565b61038981610377565b8114610393575f80fd5b50565b5f815190506103a481610380565b92915050565b5f602082840312156103bf576103be610373565b5b5f6103cc84828501610396565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061045057607f821691505b6020821081036104635761046261040c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104c57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261048a565b6104cf868361048a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61050a61050561050084610377565b6104e7565b610377565b9050919050565b5f819050919050565b610523836104f0565b61053761052f82610511565b848454610496565b825550505050565b5f90565b61054b61053f565b61055681848461051a565b505050565b5b818110156105795761056e5f82610543565b60018101905061055c565b5050565b601f8211156105be5761058f81610469565b6105988461047b565b810160208510156105a7578190505b6105bb6105b38561047b565b83018261055b565b50505b505050565b5f82821c905092915050565b5f6105de5f19846008026105c3565b1980831691505092915050565b5f6105f683836105cf565b9150826002028217905092915050565b61060f826103d5565b67ffffffffffffffff811115610628576106276103df565b5b6106328254610439565b61063d82828561057d565b5f60209050601f83116001811461066e575f841561065c578287015190505b61066685826105eb565b8655506106cd565b601f19841661067c86610469565b5f5b828110156106a35784890151825560018201915060208501945060208101905061067e565b868310156106c057848901516106bc601f8916826105cf565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106fe826106d5565b9050919050565b61070e816106f4565b82525050565b5f6020820190506107275f830184610705565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61076482610377565b915061076f83610377565b92508282019050808211156107875761078661072d565b5b92915050565b61079681610377565b82525050565b5f6060820190506107af5f830186610705565b6107bc602083018561078d565b6107c9604083018461078d565b949350505050565b5f6020820190506107e45f83018461078d565b92915050565b610de1806107f75f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610a5a565b60405180910390f35b6100cd60048036038101906100c89190610b0b565b61028d565b6040516100da9190610b63565b60405180910390f35b6100eb6102af565b6040516100f89190610b8b565b60405180910390f35b61011b60048036038101906101169190610ba4565b6102b8565b6040516101289190610b63565b60405180910390f35b6101396102e6565b6040516101469190610c0f565b60405180910390f35b61016960048036038101906101649190610c28565b6102ee565b6040516101769190610b8b565b60405180910390f35b610187610333565b6040516101949190610a5a565b60405180910390f35b6101b760048036038101906101b29190610b0b565b6103c3565b6040516101c49190610b63565b60405180910390f35b6101e760048036038101906101e29190610c53565b6103e5565b6040516101f49190610b8b565b60405180910390f35b60606003805461020c90610cbe565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610cbe565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f80610297610467565b90506102a481858561046e565b600191505092915050565b5f600254905090565b5f806102c2610467565b90506102cf858285610480565b6102da858585610512565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034290610cbe565b80601f016020809104026020016040519081016040528092919081815260200182805461036e90610cbe565b80156103b95780601f10610390576101008083540402835291602001916103b9565b820191905f5260205f20905b81548152906001019060200180831161039c57829003601f168201915b5050505050905090565b5f806103cd610467565b90506103da818585610512565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61047b8383836001610602565b505050565b5f61048b84846103e5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461050c57818110156104fd578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016104f493929190610cfd565b60405180910390fd5b61050b84848484035f610602565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610582575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105799190610d32565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105f2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105e99190610d32565b60405180910390fd5b6105fd8383836107d1565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610672575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106699190610d32565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106e2575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106d99190610d32565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107cb578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107c29190610b8b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610821578060025f8282546108159190610d78565b925050819055506108ef565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108aa578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108a193929190610cfd565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610936578060025f8282540392505081905550610980565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109dd9190610b8b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610a2c826109ea565b610a3681856109f4565b9350610a46818560208601610a04565b610a4f81610a12565b840191505092915050565b5f6020820190508181035f830152610a728184610a22565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610aa782610a7e565b9050919050565b610ab781610a9d565b8114610ac1575f80fd5b50565b5f81359050610ad281610aae565b92915050565b5f819050919050565b610aea81610ad8565b8114610af4575f80fd5b50565b5f81359050610b0581610ae1565b92915050565b5f8060408385031215610b2157610b20610a7a565b5b5f610b2e85828601610ac4565b9250506020610b3f85828601610af7565b9150509250929050565b5f8115159050919050565b610b5d81610b49565b82525050565b5f602082019050610b765f830184610b54565b92915050565b610b8581610ad8565b82525050565b5f602082019050610b9e5f830184610b7c565b92915050565b5f805f60608486031215610bbb57610bba610a7a565b5b5f610bc886828701610ac4565b9350506020610bd986828701610ac4565b9250506040610bea86828701610af7565b9150509250925092565b5f60ff82169050919050565b610c0981610bf4565b82525050565b5f602082019050610c225f830184610c00565b92915050565b5f60208284031215610c3d57610c3c610a7a565b5b5f610c4a84828501610ac4565b91505092915050565b5f8060408385031215610c6957610c68610a7a565b5b5f610c7685828601610ac4565b9250506020610c8785828601610ac4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610cd557607f821691505b602082108103610ce857610ce7610c91565b5b50919050565b610cf781610a9d565b82525050565b5f606082019050610d105f830186610cee565b610d1d6020830185610b7c565b610d2a6040830184610b7c565b949350505050565b5f602082019050610d455f830184610cee565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d8282610ad8565b9150610d8d83610ad8565b9250828201905080821115610da557610da4610d4b565b5b9291505056fea2646970667358221220a6aca3a7a4b4d78e067bda730d21bf5e57ad79b1da4b69c35d49e7ac2b3d712964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x15D8 CODESIZE SUB DUP1 PUSH2 0x15D8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B656E420000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544B420000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST POP POP POP PUSH2 0xCF CALLER DUP3 PUSH2 0xD5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x7EA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x145 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x156 PUSH0 DUP4 DUP4 PUSH2 0x15A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x75A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x278 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x233 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x79C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2BF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x309 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x389 DUP2 PUSH2 0x377 JUMP JUMPDEST DUP2 EQ PUSH2 0x393 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A4 DUP2 PUSH2 0x380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BF JUMPI PUSH2 0x3BE PUSH2 0x373 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3CC DUP5 DUP3 DUP6 ADD PUSH2 0x396 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x450 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x463 JUMPI PUSH2 0x462 PUSH2 0x40C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x4C5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x4CF DUP7 DUP4 PUSH2 0x48A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x50A PUSH2 0x505 PUSH2 0x500 DUP5 PUSH2 0x377 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x523 DUP4 PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x537 PUSH2 0x52F DUP3 PUSH2 0x511 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x496 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x54B PUSH2 0x53F JUMP JUMPDEST PUSH2 0x556 DUP2 DUP5 DUP5 PUSH2 0x51A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x579 JUMPI PUSH2 0x56E PUSH0 DUP3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x55C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x58F DUP2 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x598 DUP5 PUSH2 0x47B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5A7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5BB PUSH2 0x5B3 DUP6 PUSH2 0x47B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x55B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5DE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5C3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5F6 DUP4 DUP4 PUSH2 0x5CF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x60F DUP3 PUSH2 0x3D5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x628 JUMPI PUSH2 0x627 PUSH2 0x3DF JUMP JUMPDEST JUMPDEST PUSH2 0x632 DUP3 SLOAD PUSH2 0x439 JUMP JUMPDEST PUSH2 0x63D DUP3 DUP3 DUP6 PUSH2 0x57D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x66E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x65C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x666 DUP6 DUP3 PUSH2 0x5EB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x67C DUP7 PUSH2 0x469 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6A3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x67E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x6C0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x6BC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5CF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6FE DUP3 PUSH2 0x6D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70E DUP2 PUSH2 0x6F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x727 PUSH0 DUP4 ADD DUP5 PUSH2 0x705 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x764 DUP3 PUSH2 0x377 JUMP JUMPDEST SWAP2 POP PUSH2 0x76F DUP4 PUSH2 0x377 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x787 JUMPI PUSH2 0x786 PUSH2 0x72D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x796 DUP2 PUSH2 0x377 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7AF PUSH0 DUP4 ADD DUP7 PUSH2 0x705 JUMP JUMPDEST PUSH2 0x7BC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x78D JUMP JUMPDEST PUSH2 0x7C9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x78D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x78D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE1 DUP1 PUSH2 0x7F7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x297 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x46E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C2 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x342 SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x390 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3CD PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DA DUP2 DUP6 DUP6 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x47B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x602 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x48B DUP5 DUP5 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x50C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4FD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x602 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x582 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FD DUP4 DUP4 DUP4 PUSH2 0x7D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x672 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x669 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7CB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x821 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x815 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8EF JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8AA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x936 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x980 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA2C DUP3 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0xA36 DUP2 DUP6 PUSH2 0x9F4 JUMP JUMPDEST SWAP4 POP PUSH2 0xA46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA04 JUMP JUMPDEST PUSH2 0xA4F DUP2 PUSH2 0xA12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA72 DUP2 DUP5 PUSH2 0xA22 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA7 DUP3 PUSH2 0xA7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB7 DUP2 PUSH2 0xA9D JUMP JUMPDEST DUP2 EQ PUSH2 0xAC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAD2 DUP2 PUSH2 0xAAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEA DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB05 DUP2 PUSH2 0xAE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB21 JUMPI PUSH2 0xB20 PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB2E DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB3F DUP6 DUP3 DUP7 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5D DUP2 PUSH2 0xB49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB76 PUSH0 DUP4 ADD DUP5 PUSH2 0xB54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9E PUSH0 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC8 DUP7 DUP3 DUP8 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBD9 DUP7 DUP3 DUP8 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBEA DUP7 DUP3 DUP8 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC09 DUP2 PUSH2 0xBF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC22 PUSH0 DUP4 ADD DUP5 PUSH2 0xC00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3D JUMPI PUSH2 0xC3C PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC4A DUP5 DUP3 DUP6 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC76 DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC87 DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCD5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCE8 JUMPI PUSH2 0xCE7 PUSH2 0xC91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF7 DUP2 PUSH2 0xA9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD10 PUSH0 DUP4 ADD DUP7 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0xD1D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xD2A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD45 PUSH0 DUP4 ADD DUP5 PUSH2 0xCEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD82 DUP3 PUSH2 0xAD8 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8D DUP4 PUSH2 0xAD8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA4 PUSH2 0xD4B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xAC LOG3 0xA7 LOG4 0xB4 0xD7 DUP15 MOD PUSH28 0xDA730D21BF5E57AD79B1DA4B69C35D49E7AC2B3D712964736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "22880:140:0:-:0;;;22911:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12401:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12475:5;12467;:13;;;;;;:::i;:::-;;12500:7;12490;:17;;;;;;:::i;:::-;;12401:113;;22979:32:::1;22985:10;22997:13;22979:5;;;:32;;:::i;:::-;22911:107:::0;22880:140;;18258:208;18347:1;18328:21;;:7;:21;;;18324:91;;18401:1;18372:32;;;;;;;;;;;:::i;:::-;;;;;;;;18324:91;18424:35;18440:1;18444:7;18453:5;18424:7;;;:35;;:::i;:::-;18258:208;;:::o;16808:1107::-;16913:1;16897:18;;:4;:18;;;16893:540;;17049:5;17033:12;;:21;;;;;;;:::i;:::-;;;;;;;;16893:540;;;17085:19;17107:9;:15;17117:4;17107:15;;;;;;;;;;;;;;;;17085:37;;17154:5;17140:11;:19;17136:115;;;17211:4;17217:11;17230:5;17186:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17136:115;17403:5;17389:11;:19;17371:9;:15;17381:4;17371:15;;;;;;;;;;;;;;;:37;;;;17071:362;16893:540;17461:1;17447:16;;:2;:16;;;17443:425;;17626:5;17610:12;;:21;;;;;;;;;;;17443:425;;;17838:5;17821:9;:13;17831:2;17821:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17443:425;17898:2;17883:25;;17892:4;17883:25;;;17902:5;17883:25;;;;;;:::i;:::-;;;;;;;;16808:1107;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;22880:140:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_658": {
									"entryPoint": 1134,
									"id": 658,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_718": {
									"entryPoint": 1538,
									"id": 718,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_109": {
									"entryPoint": 1127,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_766": {
									"entryPoint": 1152,
									"id": 766,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_497": {
									"entryPoint": 1298,
									"id": 497,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_574": {
									"entryPoint": 2001,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_394": {
									"entryPoint": 997,
									"id": 394,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_418": {
									"entryPoint": 653,
									"id": 418,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_353": {
									"entryPoint": 750,
									"id": 353,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_331": {
									"entryPoint": 742,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_313": {
									"entryPoint": 509,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_322": {
									"entryPoint": 819,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_340": {
									"entryPoint": 687,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_450": {
									"entryPoint": 696,
									"id": 450,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_377": {
									"entryPoint": 963,
									"id": 377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3325,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3403,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7253:1",
										"nodeType": "YulBlock",
										"src": "0:7253:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:77:1",
													"nodeType": "YulBlock",
													"src": "349:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:1"
																},
																"nativeSrc": "360:23:1",
																"nodeType": "YulFunctionCall",
																"src": "360:23:1"
															},
															"nativeSrc": "360:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:1"
																		},
																		"nativeSrc": "399:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:1",
																		"nodeType": "YulLiteral",
																		"src": "417:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:1"
																},
																"nativeSrc": "392:27:1",
																"nodeType": "YulFunctionCall",
																"src": "392:27:1"
															},
															"nativeSrc": "392:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:139:1"
											},
											{
												"body": {
													"nativeSrc": "480:54:1",
													"nodeType": "YulBlock",
													"src": "480:54:1",
													"statements": [
														{
															"nativeSrc": "490:38:1",
															"nodeType": "YulAssignment",
															"src": "490:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:1",
																				"nodeType": "YulLiteral",
																				"src": "515:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:1"
																		},
																		"nativeSrc": "504:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:1",
																				"nodeType": "YulLiteral",
																				"src": "524:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:1"
																		},
																		"nativeSrc": "520:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nativeSrc": "500:28:1",
																"nodeType": "YulFunctionCall",
																"src": "500:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:1",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "432:102:1"
											},
											{
												"body": {
													"nativeSrc": "632:285:1",
													"nodeType": "YulBlock",
													"src": "632:285:1",
													"statements": [
														{
															"nativeSrc": "642:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:1"
																},
																"nativeSrc": "656:39:1",
																"nodeType": "YulFunctionCall",
																"src": "656:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:1",
																	"nodeType": "YulTypedName",
																	"src": "646:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:1",
															"nodeType": "YulAssignment",
															"src": "704:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:1"
																},
																"nativeSrc": "711:71:1",
																"nodeType": "YulFunctionCall",
																"src": "711:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:1",
																				"nodeType": "YulLiteral",
																				"src": "837:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:1"
																},
																"nativeSrc": "791:65:1",
																"nodeType": "YulFunctionCall",
																"src": "791:65:1"
															},
															"nativeSrc": "791:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:1"
														},
														{
															"nativeSrc": "865:46:1",
															"nodeType": "YulAssignment",
															"src": "865:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:1"
																		},
																		"nativeSrc": "881:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																},
																"nativeSrc": "872:39:1",
																"nodeType": "YulFunctionCall",
																"src": "872:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:1",
														"nodeType": "YulTypedName",
														"src": "613:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:1",
														"nodeType": "YulTypedName",
														"src": "620:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:1",
														"nodeType": "YulTypedName",
														"src": "628:3:1",
														"type": ""
													}
												],
												"src": "540:377:1"
											},
											{
												"body": {
													"nativeSrc": "1041:195:1",
													"nodeType": "YulBlock",
													"src": "1041:195:1",
													"statements": [
														{
															"nativeSrc": "1051:26:1",
															"nodeType": "YulAssignment",
															"src": "1051:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:1"
																},
																"nativeSrc": "1059:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:1"
																		},
																		"nativeSrc": "1094:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:1"
																		},
																		"nativeSrc": "1113:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:1"
																},
																"nativeSrc": "1087:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:1"
															},
															"nativeSrc": "1087:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:1"
														},
														{
															"nativeSrc": "1143:86:1",
															"nodeType": "YulAssignment",
															"src": "1143:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:1"
																},
																"nativeSrc": "1151:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:1",
														"nodeType": "YulTypedName",
														"src": "1013:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:1",
														"nodeType": "YulTypedName",
														"src": "1025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:1",
														"nodeType": "YulTypedName",
														"src": "1036:4:1",
														"type": ""
													}
												],
												"src": "923:313:1"
											},
											{
												"body": {
													"nativeSrc": "1282:35:1",
													"nodeType": "YulBlock",
													"src": "1282:35:1",
													"statements": [
														{
															"nativeSrc": "1292:19:1",
															"nodeType": "YulAssignment",
															"src": "1292:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:1"
																},
																"nativeSrc": "1302:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:1",
														"nodeType": "YulTypedName",
														"src": "1275:6:1",
														"type": ""
													}
												],
												"src": "1242:75:1"
											},
											{
												"body": {
													"nativeSrc": "1412:28:1",
													"nodeType": "YulBlock",
													"src": "1412:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:1"
																},
																"nativeSrc": "1422:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:1"
															},
															"nativeSrc": "1422:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:1"
											},
											{
												"body": {
													"nativeSrc": "1535:28:1",
													"nodeType": "YulBlock",
													"src": "1535:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:1"
																},
																"nativeSrc": "1545:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:1"
															},
															"nativeSrc": "1545:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:1"
											},
											{
												"body": {
													"nativeSrc": "1614:81:1",
													"nodeType": "YulBlock",
													"src": "1614:81:1",
													"statements": [
														{
															"nativeSrc": "1624:65:1",
															"nodeType": "YulAssignment",
															"src": "1624:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nativeSrc": "1635:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:1",
														"nodeType": "YulTypedName",
														"src": "1596:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:1",
														"nodeType": "YulTypedName",
														"src": "1606:7:1",
														"type": ""
													}
												],
												"src": "1569:126:1"
											},
											{
												"body": {
													"nativeSrc": "1746:51:1",
													"nodeType": "YulBlock",
													"src": "1746:51:1",
													"statements": [
														{
															"nativeSrc": "1756:35:1",
															"nodeType": "YulAssignment",
															"src": "1756:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:1"
																},
																"nativeSrc": "1767:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:1",
														"nodeType": "YulTypedName",
														"src": "1728:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:1",
														"nodeType": "YulTypedName",
														"src": "1738:7:1",
														"type": ""
													}
												],
												"src": "1701:96:1"
											},
											{
												"body": {
													"nativeSrc": "1846:79:1",
													"nodeType": "YulBlock",
													"src": "1846:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:1",
																"nodeType": "YulBlock",
																"src": "1903:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:1"
																			},
																			"nativeSrc": "1905:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:1"
																		},
																		"nativeSrc": "1905:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:1"
																				},
																				"nativeSrc": "1876:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:1"
																		},
																		"nativeSrc": "1866:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:1"
																},
																"nativeSrc": "1859:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:1"
															},
															"nativeSrc": "1856:63:1",
															"nodeType": "YulIf",
															"src": "1856:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:1",
														"nodeType": "YulTypedName",
														"src": "1839:5:1",
														"type": ""
													}
												],
												"src": "1803:122:1"
											},
											{
												"body": {
													"nativeSrc": "1983:87:1",
													"nodeType": "YulBlock",
													"src": "1983:87:1",
													"statements": [
														{
															"nativeSrc": "1993:29:1",
															"nodeType": "YulAssignment",
															"src": "1993:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:1"
																},
																"nativeSrc": "2002:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:1"
																},
																"nativeSrc": "2031:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:1"
															},
															"nativeSrc": "2031:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:1",
														"nodeType": "YulTypedName",
														"src": "1961:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:1",
														"nodeType": "YulTypedName",
														"src": "1969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:1",
														"nodeType": "YulTypedName",
														"src": "1977:5:1",
														"type": ""
													}
												],
												"src": "1931:139:1"
											},
											{
												"body": {
													"nativeSrc": "2121:32:1",
													"nodeType": "YulBlock",
													"src": "2121:32:1",
													"statements": [
														{
															"nativeSrc": "2131:16:1",
															"nodeType": "YulAssignment",
															"src": "2131:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:1",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:1",
														"nodeType": "YulTypedName",
														"src": "2103:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:1",
														"nodeType": "YulTypedName",
														"src": "2113:7:1",
														"type": ""
													}
												],
												"src": "2076:77:1"
											},
											{
												"body": {
													"nativeSrc": "2202:79:1",
													"nodeType": "YulBlock",
													"src": "2202:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:1",
																"nodeType": "YulBlock",
																"src": "2259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:1"
																			},
																			"nativeSrc": "2261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:1"
																		},
																		"nativeSrc": "2261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:1"
																				},
																				"nativeSrc": "2232:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:1"
																		},
																		"nativeSrc": "2222:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:1"
																},
																"nativeSrc": "2215:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:1"
															},
															"nativeSrc": "2212:63:1",
															"nodeType": "YulIf",
															"src": "2212:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:1",
														"nodeType": "YulTypedName",
														"src": "2195:5:1",
														"type": ""
													}
												],
												"src": "2159:122:1"
											},
											{
												"body": {
													"nativeSrc": "2339:87:1",
													"nodeType": "YulBlock",
													"src": "2339:87:1",
													"statements": [
														{
															"nativeSrc": "2349:29:1",
															"nodeType": "YulAssignment",
															"src": "2349:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:1"
																},
																"nativeSrc": "2358:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:1"
																},
																"nativeSrc": "2387:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:1"
															},
															"nativeSrc": "2387:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:1",
														"nodeType": "YulTypedName",
														"src": "2317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:1",
														"nodeType": "YulTypedName",
														"src": "2325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:1",
														"nodeType": "YulTypedName",
														"src": "2333:5:1",
														"type": ""
													}
												],
												"src": "2287:139:1"
											},
											{
												"body": {
													"nativeSrc": "2515:391:1",
													"nodeType": "YulBlock",
													"src": "2515:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:1",
																"nodeType": "YulBlock",
																"src": "2561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:1"
																			},
																			"nativeSrc": "2563:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:1"
																		},
																		"nativeSrc": "2563:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:1"
																		},
																		"nativeSrc": "2532:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:1"
																},
																"nativeSrc": "2528:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:1"
															},
															"nativeSrc": "2525:119:1",
															"nodeType": "YulIf",
															"src": "2525:119:1"
														},
														{
															"nativeSrc": "2654:117:1",
															"nodeType": "YulBlock",
															"src": "2654:117:1",
															"statements": [
																{
																	"nativeSrc": "2669:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:1"
																				},
																				"nativeSrc": "2729:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:1"
																		},
																		"nativeSrc": "2708:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:1",
															"nodeType": "YulBlock",
															"src": "2781:118:1",
															"statements": [
																{
																	"nativeSrc": "2796:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:1"
																				},
																				"nativeSrc": "2857:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:1"
																		},
																		"nativeSrc": "2836:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:1",
														"nodeType": "YulTypedName",
														"src": "2477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:1",
														"nodeType": "YulTypedName",
														"src": "2488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:1",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:1",
														"nodeType": "YulTypedName",
														"src": "2508:6:1",
														"type": ""
													}
												],
												"src": "2432:474:1"
											},
											{
												"body": {
													"nativeSrc": "2954:48:1",
													"nodeType": "YulBlock",
													"src": "2954:48:1",
													"statements": [
														{
															"nativeSrc": "2964:32:1",
															"nodeType": "YulAssignment",
															"src": "2964:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:1"
																		},
																		"nativeSrc": "2982:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nativeSrc": "2975:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:1",
														"nodeType": "YulTypedName",
														"src": "2936:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:1",
														"nodeType": "YulTypedName",
														"src": "2946:7:1",
														"type": ""
													}
												],
												"src": "2912:90:1"
											},
											{
												"body": {
													"nativeSrc": "3067:50:1",
													"nodeType": "YulBlock",
													"src": "3067:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:1"
																		},
																		"nativeSrc": "3089:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:1"
																},
																"nativeSrc": "3077:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:1"
															},
															"nativeSrc": "3077:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:1",
														"nodeType": "YulTypedName",
														"src": "3055:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:1",
														"nodeType": "YulTypedName",
														"src": "3062:3:1",
														"type": ""
													}
												],
												"src": "3008:109:1"
											},
											{
												"body": {
													"nativeSrc": "3215:118:1",
													"nodeType": "YulBlock",
													"src": "3215:118:1",
													"statements": [
														{
															"nativeSrc": "3225:26:1",
															"nodeType": "YulAssignment",
															"src": "3225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:1"
																},
																"nativeSrc": "3233:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:1"
																		},
																		"nativeSrc": "3308:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:1"
																},
																"nativeSrc": "3261:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:1"
															},
															"nativeSrc": "3261:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:1",
														"nodeType": "YulTypedName",
														"src": "3187:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:1",
														"nodeType": "YulTypedName",
														"src": "3199:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:1",
														"nodeType": "YulTypedName",
														"src": "3210:4:1",
														"type": ""
													}
												],
												"src": "3123:210:1"
											},
											{
												"body": {
													"nativeSrc": "3404:53:1",
													"nodeType": "YulBlock",
													"src": "3404:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:1"
																		},
																		"nativeSrc": "3426:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:1"
																},
																"nativeSrc": "3414:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:1"
															},
															"nativeSrc": "3414:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:1",
														"nodeType": "YulTypedName",
														"src": "3392:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:1",
														"nodeType": "YulTypedName",
														"src": "3399:3:1",
														"type": ""
													}
												],
												"src": "3339:118:1"
											},
											{
												"body": {
													"nativeSrc": "3561:124:1",
													"nodeType": "YulBlock",
													"src": "3561:124:1",
													"statements": [
														{
															"nativeSrc": "3571:26:1",
															"nodeType": "YulAssignment",
															"src": "3571:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:1"
																},
																"nativeSrc": "3579:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:1"
																		},
																		"nativeSrc": "3660:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:1"
																},
																"nativeSrc": "3607:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:1"
															},
															"nativeSrc": "3607:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:1",
														"nodeType": "YulTypedName",
														"src": "3533:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:1",
														"nodeType": "YulTypedName",
														"src": "3545:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:1",
														"nodeType": "YulTypedName",
														"src": "3556:4:1",
														"type": ""
													}
												],
												"src": "3463:222:1"
											},
											{
												"body": {
													"nativeSrc": "3791:519:1",
													"nodeType": "YulBlock",
													"src": "3791:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:1",
																"nodeType": "YulBlock",
																"src": "3837:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:1"
																			},
																			"nativeSrc": "3839:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:1"
																		},
																		"nativeSrc": "3839:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:1"
																		},
																		"nativeSrc": "3808:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:1"
																},
																"nativeSrc": "3804:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:1"
															},
															"nativeSrc": "3801:119:1",
															"nodeType": "YulIf",
															"src": "3801:119:1"
														},
														{
															"nativeSrc": "3930:117:1",
															"nodeType": "YulBlock",
															"src": "3930:117:1",
															"statements": [
																{
																	"nativeSrc": "3945:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:1"
																				},
																				"nativeSrc": "4005:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:1"
																		},
																		"nativeSrc": "3984:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:1",
															"nodeType": "YulBlock",
															"src": "4057:118:1",
															"statements": [
																{
																	"nativeSrc": "4072:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:1"
																				},
																				"nativeSrc": "4133:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:1"
																		},
																		"nativeSrc": "4112:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:1",
															"nodeType": "YulBlock",
															"src": "4185:118:1",
															"statements": [
																{
																	"nativeSrc": "4200:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:1"
																				},
																				"nativeSrc": "4261:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:1"
																		},
																		"nativeSrc": "4240:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:1",
														"nodeType": "YulTypedName",
														"src": "3745:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:1",
														"nodeType": "YulTypedName",
														"src": "3756:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:1",
														"nodeType": "YulTypedName",
														"src": "3768:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:1",
														"nodeType": "YulTypedName",
														"src": "3776:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:1",
														"nodeType": "YulTypedName",
														"src": "3784:6:1",
														"type": ""
													}
												],
												"src": "3691:619:1"
											},
											{
												"body": {
													"nativeSrc": "4359:43:1",
													"nodeType": "YulBlock",
													"src": "4359:43:1",
													"statements": [
														{
															"nativeSrc": "4369:27:1",
															"nodeType": "YulAssignment",
															"src": "4369:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:1"
																},
																"nativeSrc": "4380:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:1",
														"nodeType": "YulTypedName",
														"src": "4341:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:1",
														"nodeType": "YulTypedName",
														"src": "4351:7:1",
														"type": ""
													}
												],
												"src": "4316:86:1"
											},
											{
												"body": {
													"nativeSrc": "4469:51:1",
													"nodeType": "YulBlock",
													"src": "4469:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:1"
																		},
																		"nativeSrc": "4491:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:1"
																},
																"nativeSrc": "4479:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:1"
															},
															"nativeSrc": "4479:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:1",
														"nodeType": "YulTypedName",
														"src": "4457:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:1",
														"nodeType": "YulTypedName",
														"src": "4464:3:1",
														"type": ""
													}
												],
												"src": "4408:112:1"
											},
											{
												"body": {
													"nativeSrc": "4620:120:1",
													"nodeType": "YulBlock",
													"src": "4620:120:1",
													"statements": [
														{
															"nativeSrc": "4630:26:1",
															"nodeType": "YulAssignment",
															"src": "4630:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:1"
																},
																"nativeSrc": "4638:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:1"
																		},
																		"nativeSrc": "4715:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:1"
																},
																"nativeSrc": "4666:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:1"
															},
															"nativeSrc": "4666:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:1",
														"nodeType": "YulTypedName",
														"src": "4592:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:1",
														"nodeType": "YulTypedName",
														"src": "4604:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:1",
														"nodeType": "YulTypedName",
														"src": "4615:4:1",
														"type": ""
													}
												],
												"src": "4526:214:1"
											},
											{
												"body": {
													"nativeSrc": "4812:263:1",
													"nodeType": "YulBlock",
													"src": "4812:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:1",
																"nodeType": "YulBlock",
																"src": "4858:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:1"
																			},
																			"nativeSrc": "4860:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:1"
																		},
																		"nativeSrc": "4860:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:1"
																		},
																		"nativeSrc": "4829:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:1"
																},
																"nativeSrc": "4825:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:1"
															},
															"nativeSrc": "4822:119:1",
															"nodeType": "YulIf",
															"src": "4822:119:1"
														},
														{
															"nativeSrc": "4951:117:1",
															"nodeType": "YulBlock",
															"src": "4951:117:1",
															"statements": [
																{
																	"nativeSrc": "4966:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:1"
																				},
																				"nativeSrc": "5026:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:1"
																		},
																		"nativeSrc": "5005:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:1",
														"nodeType": "YulTypedName",
														"src": "4782:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:1",
														"nodeType": "YulTypedName",
														"src": "4793:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:1",
														"nodeType": "YulTypedName",
														"src": "4805:6:1",
														"type": ""
													}
												],
												"src": "4746:329:1"
											},
											{
												"body": {
													"nativeSrc": "5164:391:1",
													"nodeType": "YulBlock",
													"src": "5164:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:1",
																"nodeType": "YulBlock",
																"src": "5210:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:1"
																			},
																			"nativeSrc": "5212:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:1"
																		},
																		"nativeSrc": "5212:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:1"
																		},
																		"nativeSrc": "5181:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:1"
																},
																"nativeSrc": "5177:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:1"
															},
															"nativeSrc": "5174:119:1",
															"nodeType": "YulIf",
															"src": "5174:119:1"
														},
														{
															"nativeSrc": "5303:117:1",
															"nodeType": "YulBlock",
															"src": "5303:117:1",
															"statements": [
																{
																	"nativeSrc": "5318:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:1"
																				},
																				"nativeSrc": "5378:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:1"
																		},
																		"nativeSrc": "5357:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5430:118:1",
															"nodeType": "YulBlock",
															"src": "5430:118:1",
															"statements": [
																{
																	"nativeSrc": "5445:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5445:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5459:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5449:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5449:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5475:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5475:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5510:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5510:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5521:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5521:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5506:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5506:3:1"
																				},
																				"nativeSrc": "5506:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5506:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5530:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5530:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5485:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5485:20:1"
																		},
																		"nativeSrc": "5485:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5475:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5475:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5081:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5126:9:1",
														"nodeType": "YulTypedName",
														"src": "5126:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5137:7:1",
														"nodeType": "YulTypedName",
														"src": "5137:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5149:6:1",
														"nodeType": "YulTypedName",
														"src": "5149:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5157:6:1",
														"nodeType": "YulTypedName",
														"src": "5157:6:1",
														"type": ""
													}
												],
												"src": "5081:474:1"
											},
											{
												"body": {
													"nativeSrc": "5589:152:1",
													"nodeType": "YulBlock",
													"src": "5589:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5606:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5609:77:1",
																		"nodeType": "YulLiteral",
																		"src": "5609:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5599:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:1"
																},
																"nativeSrc": "5599:88:1",
																"nodeType": "YulFunctionCall",
																"src": "5599:88:1"
															},
															"nativeSrc": "5599:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "5599:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5703:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5706:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5706:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5696:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:1"
																},
																"nativeSrc": "5696:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5696:15:1"
															},
															"nativeSrc": "5696:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5696:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5727:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5727:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5730:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5720:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:1"
																},
																"nativeSrc": "5720:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5720:15:1"
															},
															"nativeSrc": "5720:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5720:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5561:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:180:1"
											},
											{
												"body": {
													"nativeSrc": "5798:269:1",
													"nodeType": "YulBlock",
													"src": "5798:269:1",
													"statements": [
														{
															"nativeSrc": "5808:22:1",
															"nodeType": "YulAssignment",
															"src": "5808:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5822:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5822:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5828:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5828:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5818:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:1"
																},
																"nativeSrc": "5818:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5818:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5808:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:1"
																}
															]
														},
														{
															"nativeSrc": "5839:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5839:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5869:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5869:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5875:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5865:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:1"
																},
																"nativeSrc": "5865:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5865:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5843:18:1",
																	"nodeType": "YulTypedName",
																	"src": "5843:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5916:51:1",
																"nodeType": "YulBlock",
																"src": "5916:51:1",
																"statements": [
																	{
																		"nativeSrc": "5930:27:1",
																		"nodeType": "YulAssignment",
																		"src": "5930:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5944:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5944:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5952:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5952:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5940:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5940:3:1"
																			},
																			"nativeSrc": "5940:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5940:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5930:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5896:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "5896:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5889:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:1"
																},
																"nativeSrc": "5889:26:1",
																"nodeType": "YulFunctionCall",
																"src": "5889:26:1"
															},
															"nativeSrc": "5886:81:1",
															"nodeType": "YulIf",
															"src": "5886:81:1"
														},
														{
															"body": {
																"nativeSrc": "6019:42:1",
																"nodeType": "YulBlock",
																"src": "6019:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6033:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6033:16:1"
																			},
																			"nativeSrc": "6033:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6033:18:1"
																		},
																		"nativeSrc": "6033:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6033:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5983:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "5983:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6006:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6014:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6003:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6003:2:1"
																		},
																		"nativeSrc": "6003:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5980:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5980:2:1"
																},
																"nativeSrc": "5980:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5980:38:1"
															},
															"nativeSrc": "5977:84:1",
															"nodeType": "YulIf",
															"src": "5977:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5747:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5782:4:1",
														"nodeType": "YulTypedName",
														"src": "5782:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5791:6:1",
														"nodeType": "YulTypedName",
														"src": "5791:6:1",
														"type": ""
													}
												],
												"src": "5747:320:1"
											},
											{
												"body": {
													"nativeSrc": "6138:53:1",
													"nodeType": "YulBlock",
													"src": "6138:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6155:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6155:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6178:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6178:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6160:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6160:17:1"
																		},
																		"nativeSrc": "6160:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6160:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6148:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:1"
																},
																"nativeSrc": "6148:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6148:37:1"
															},
															"nativeSrc": "6148:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6148:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6073:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6126:5:1",
														"nodeType": "YulTypedName",
														"src": "6126:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6133:3:1",
														"nodeType": "YulTypedName",
														"src": "6133:3:1",
														"type": ""
													}
												],
												"src": "6073:118:1"
											},
											{
												"body": {
													"nativeSrc": "6351:288:1",
													"nodeType": "YulBlock",
													"src": "6351:288:1",
													"statements": [
														{
															"nativeSrc": "6361:26:1",
															"nodeType": "YulAssignment",
															"src": "6361:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6373:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6373:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6384:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6384:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6369:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6369:3:1"
																},
																"nativeSrc": "6369:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6369:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6361:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6361:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6441:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6441:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6454:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6454:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6465:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6465:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6450:3:1"
																		},
																		"nativeSrc": "6450:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6450:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6397:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6397:43:1"
																},
																"nativeSrc": "6397:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6397:71:1"
															},
															"nativeSrc": "6397:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6397:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6522:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6522:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6535:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6535:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6546:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6546:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6531:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6531:3:1"
																		},
																		"nativeSrc": "6531:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6531:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6478:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6478:43:1"
																},
																"nativeSrc": "6478:72:1",
																"nodeType": "YulFunctionCall",
																"src": "6478:72:1"
															},
															"nativeSrc": "6478:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "6478:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6604:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6604:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6617:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6617:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6628:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6628:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6613:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6613:3:1"
																		},
																		"nativeSrc": "6613:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6613:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6560:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6560:43:1"
																},
																"nativeSrc": "6560:72:1",
																"nodeType": "YulFunctionCall",
																"src": "6560:72:1"
															},
															"nativeSrc": "6560:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "6560:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6197:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6307:9:1",
														"nodeType": "YulTypedName",
														"src": "6307:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6319:6:1",
														"nodeType": "YulTypedName",
														"src": "6319:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6327:6:1",
														"nodeType": "YulTypedName",
														"src": "6327:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6335:6:1",
														"nodeType": "YulTypedName",
														"src": "6335:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6346:4:1",
														"nodeType": "YulTypedName",
														"src": "6346:4:1",
														"type": ""
													}
												],
												"src": "6197:442:1"
											},
											{
												"body": {
													"nativeSrc": "6743:124:1",
													"nodeType": "YulBlock",
													"src": "6743:124:1",
													"statements": [
														{
															"nativeSrc": "6753:26:1",
															"nodeType": "YulAssignment",
															"src": "6753:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6765:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6765:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6776:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6776:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6761:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6761:3:1"
																},
																"nativeSrc": "6761:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6761:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6753:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6833:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6833:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6846:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6846:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6857:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6857:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6842:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6842:3:1"
																		},
																		"nativeSrc": "6842:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6842:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6789:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6789:43:1"
																},
																"nativeSrc": "6789:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6789:71:1"
															},
															"nativeSrc": "6789:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6789:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6645:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6715:9:1",
														"nodeType": "YulTypedName",
														"src": "6715:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6727:6:1",
														"nodeType": "YulTypedName",
														"src": "6727:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6738:4:1",
														"nodeType": "YulTypedName",
														"src": "6738:4:1",
														"type": ""
													}
												],
												"src": "6645:222:1"
											},
											{
												"body": {
													"nativeSrc": "6901:152:1",
													"nodeType": "YulBlock",
													"src": "6901:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6918:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6918:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6921:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6921:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6911:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6911:6:1"
																},
																"nativeSrc": "6911:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6911:88:1"
															},
															"nativeSrc": "6911:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6911:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7015:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7015:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7018:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7018:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7008:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7008:6:1"
																},
																"nativeSrc": "7008:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7008:15:1"
															},
															"nativeSrc": "7008:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7008:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7039:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7039:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7042:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7032:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:1"
																},
																"nativeSrc": "7032:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7032:15:1"
															},
															"nativeSrc": "7032:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7032:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6873:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6873:180:1"
											},
											{
												"body": {
													"nativeSrc": "7103:147:1",
													"nodeType": "YulBlock",
													"src": "7103:147:1",
													"statements": [
														{
															"nativeSrc": "7113:25:1",
															"nodeType": "YulAssignment",
															"src": "7113:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7136:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7136:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7118:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7118:17:1"
																},
																"nativeSrc": "7118:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7118:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7113:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7113:1:1"
																}
															]
														},
														{
															"nativeSrc": "7147:25:1",
															"nodeType": "YulAssignment",
															"src": "7147:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7170:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7170:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7152:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7152:17:1"
																},
																"nativeSrc": "7152:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7152:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7147:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7147:1:1"
																}
															]
														},
														{
															"nativeSrc": "7181:16:1",
															"nodeType": "YulAssignment",
															"src": "7181:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7192:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7192:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7195:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7195:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7188:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:1"
																},
																"nativeSrc": "7188:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7188:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7181:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7221:22:1",
																"nodeType": "YulBlock",
																"src": "7221:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7223:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7223:16:1"
																			},
																			"nativeSrc": "7223:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7223:18:1"
																		},
																		"nativeSrc": "7223:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7223:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7213:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7213:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7216:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7216:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7210:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7210:2:1"
																},
																"nativeSrc": "7210:10:1",
																"nodeType": "YulFunctionCall",
																"src": "7210:10:1"
															},
															"nativeSrc": "7207:36:1",
															"nodeType": "YulIf",
															"src": "7207:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7059:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7090:1:1",
														"nodeType": "YulTypedName",
														"src": "7090:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7093:1:1",
														"nodeType": "YulTypedName",
														"src": "7093:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7099:3:1",
														"nodeType": "YulTypedName",
														"src": "7099:3:1",
														"type": ""
													}
												],
												"src": "7059:191:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610a5a565b60405180910390f35b6100cd60048036038101906100c89190610b0b565b61028d565b6040516100da9190610b63565b60405180910390f35b6100eb6102af565b6040516100f89190610b8b565b60405180910390f35b61011b60048036038101906101169190610ba4565b6102b8565b6040516101289190610b63565b60405180910390f35b6101396102e6565b6040516101469190610c0f565b60405180910390f35b61016960048036038101906101649190610c28565b6102ee565b6040516101769190610b8b565b60405180910390f35b610187610333565b6040516101949190610a5a565b60405180910390f35b6101b760048036038101906101b29190610b0b565b6103c3565b6040516101c49190610b63565b60405180910390f35b6101e760048036038101906101e29190610c53565b6103e5565b6040516101f49190610b8b565b60405180910390f35b60606003805461020c90610cbe565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610cbe565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f80610297610467565b90506102a481858561046e565b600191505092915050565b5f600254905090565b5f806102c2610467565b90506102cf858285610480565b6102da858585610512565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034290610cbe565b80601f016020809104026020016040519081016040528092919081815260200182805461036e90610cbe565b80156103b95780601f10610390576101008083540402835291602001916103b9565b820191905f5260205f20905b81548152906001019060200180831161039c57829003601f168201915b5050505050905090565b5f806103cd610467565b90506103da818585610512565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61047b8383836001610602565b505050565b5f61048b84846103e5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461050c57818110156104fd578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016104f493929190610cfd565b60405180910390fd5b61050b84848484035f610602565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610582575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105799190610d32565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105f2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105e99190610d32565b60405180910390fd5b6105fd8383836107d1565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610672575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106699190610d32565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106e2575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106d99190610d32565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107cb578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107c29190610b8b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610821578060025f8282546108159190610d78565b925050819055506108ef565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108aa578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108a193929190610cfd565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610936578060025f8282540392505081905550610980565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109dd9190610b8b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610a2c826109ea565b610a3681856109f4565b9350610a46818560208601610a04565b610a4f81610a12565b840191505092915050565b5f6020820190508181035f830152610a728184610a22565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610aa782610a7e565b9050919050565b610ab781610a9d565b8114610ac1575f80fd5b50565b5f81359050610ad281610aae565b92915050565b5f819050919050565b610aea81610ad8565b8114610af4575f80fd5b50565b5f81359050610b0581610ae1565b92915050565b5f8060408385031215610b2157610b20610a7a565b5b5f610b2e85828601610ac4565b9250506020610b3f85828601610af7565b9150509250929050565b5f8115159050919050565b610b5d81610b49565b82525050565b5f602082019050610b765f830184610b54565b92915050565b610b8581610ad8565b82525050565b5f602082019050610b9e5f830184610b7c565b92915050565b5f805f60608486031215610bbb57610bba610a7a565b5b5f610bc886828701610ac4565b9350506020610bd986828701610ac4565b9250506040610bea86828701610af7565b9150509250925092565b5f60ff82169050919050565b610c0981610bf4565b82525050565b5f602082019050610c225f830184610c00565b92915050565b5f60208284031215610c3d57610c3c610a7a565b5b5f610c4a84828501610ac4565b91505092915050565b5f8060408385031215610c6957610c68610a7a565b5b5f610c7685828601610ac4565b9250506020610c8785828601610ac4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610cd557607f821691505b602082108103610ce857610ce7610c91565b5b50919050565b610cf781610a9d565b82525050565b5f606082019050610d105f830186610cee565b610d1d6020830185610b7c565b610d2a6040830184610b7c565b949350505050565b5f602082019050610d455f830184610cee565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d8282610ad8565b9150610d8d83610ad8565b9250828201905080821115610da557610da4610d4b565b5b9291505056fea2646970667358221220a6aca3a7a4b4d78e067bda730d21bf5e57ad79b1da4b69c35d49e7ac2b3d712964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x297 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x46E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C2 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x342 SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x390 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3CD PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DA DUP2 DUP6 DUP6 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x47B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x602 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x48B DUP5 DUP5 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x50C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4FD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x602 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x582 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FD DUP4 DUP4 DUP4 PUSH2 0x7D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x672 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x669 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7CB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x821 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x815 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8EF JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8AA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x936 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x980 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA2C DUP3 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0xA36 DUP2 DUP6 PUSH2 0x9F4 JUMP JUMPDEST SWAP4 POP PUSH2 0xA46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA04 JUMP JUMPDEST PUSH2 0xA4F DUP2 PUSH2 0xA12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA72 DUP2 DUP5 PUSH2 0xA22 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA7 DUP3 PUSH2 0xA7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB7 DUP2 PUSH2 0xA9D JUMP JUMPDEST DUP2 EQ PUSH2 0xAC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAD2 DUP2 PUSH2 0xAAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEA DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB05 DUP2 PUSH2 0xAE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB21 JUMPI PUSH2 0xB20 PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB2E DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB3F DUP6 DUP3 DUP7 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5D DUP2 PUSH2 0xB49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB76 PUSH0 DUP4 ADD DUP5 PUSH2 0xB54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9E PUSH0 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC8 DUP7 DUP3 DUP8 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBD9 DUP7 DUP3 DUP8 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBEA DUP7 DUP3 DUP8 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC09 DUP2 PUSH2 0xBF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC22 PUSH0 DUP4 ADD DUP5 PUSH2 0xC00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3D JUMPI PUSH2 0xC3C PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC4A DUP5 DUP3 DUP6 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC76 DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC87 DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCD5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCE8 JUMPI PUSH2 0xCE7 PUSH2 0xC91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF7 DUP2 PUSH2 0xA9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD10 PUSH0 DUP4 ADD DUP7 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0xD1D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xD2A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD45 PUSH0 DUP4 ADD DUP5 PUSH2 0xCEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD82 DUP3 PUSH2 0xAD8 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8D DUP4 PUSH2 0xAD8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA4 PUSH2 0xD4B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xAC LOG3 0xA7 LOG4 0xB4 0xD7 DUP15 MOD PUSH28 0xDA730D21BF5E57AD79B1DA4B69C35D49E7AC2B3D712964736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "22880:140:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12579:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14798:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13649:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15576:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13507:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13804:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12781:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14115:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14351:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12579:89;12624:13;12656:5;12649:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12579:89;:::o;14798:186::-;14871:4;14887:13;14903:12;:10;:12::i;:::-;14887:28;;14925:31;14934:5;14941:7;14950:5;14925:8;:31::i;:::-;14973:4;14966:11;;;14798:186;;;;:::o;13649:97::-;13701:7;13727:12;;13720:19;;13649:97;:::o;15576:244::-;15663:4;15679:15;15697:12;:10;:12::i;:::-;15679:30;;15719:37;15735:4;15741:7;15750:5;15719:15;:37::i;:::-;15766:26;15776:4;15782:2;15786:5;15766:9;:26::i;:::-;15809:4;15802:11;;;15576:244;;;;;:::o;13507:82::-;13556:5;13580:2;13573:9;;13507:82;:::o;13804:116::-;13869:7;13895:9;:18;13905:7;13895:18;;;;;;;;;;;;;;;;13888:25;;13804:116;;;:::o;12781:93::-;12828:13;12860:7;12853:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12781:93;:::o;14115:178::-;14184:4;14200:13;14216:12;:10;:12::i;:::-;14200:28;;14238:27;14248:5;14255:2;14259:5;14238:9;:27::i;:::-;14282:4;14275:11;;;14115:178;;;;:::o;14351:140::-;14431:7;14457:11;:18;14469:5;14457:18;;;;;;;;;;;;;;;:27;14476:7;14457:27;;;;;;;;;;;;;;;;14450:34;;14351:140;;;;:::o;4162:96::-;4215:7;4241:10;4234:17;;4162:96;:::o;19526:128::-;19610:37;19619:5;19626:7;19635:5;19642:4;19610:8;:37::i;:::-;19526:128;;;:::o;21215:477::-;21314:24;21341:25;21351:5;21358:7;21341:9;:25::i;:::-;21314:52;;21400:17;21380:16;:37;21376:310;;21456:5;21437:16;:24;21433:130;;;21515:7;21524:16;21542:5;21488:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21433:130;21604:57;21613:5;21620:7;21648:5;21629:16;:24;21655:5;21604:8;:57::i;:::-;21376:310;21304:388;21215:477;;;:::o;16193:300::-;16292:1;16276:18;;:4;:18;;;16272:86;;16344:1;16317:30;;;;;;;;;;;:::i;:::-;;;;;;;;16272:86;16385:1;16371:16;;:2;:16;;;16367:86;;16439:1;16410:32;;;;;;;;;;;:::i;:::-;;;;;;;;16367:86;16462:24;16470:4;16476:2;16480:5;16462:7;:24::i;:::-;16193:300;;;:::o;20501:432::-;20630:1;20613:19;;:5;:19;;;20609:89;;20684:1;20655:32;;;;;;;;;;;:::i;:::-;;;;;;;;20609:89;20730:1;20711:21;;:7;:21;;;20707:90;;20783:1;20755:31;;;;;;;;;;;:::i;:::-;;;;;;;;20707:90;20836:5;20806:11;:18;20818:5;20806:18;;;;;;;;;;;;;;;:27;20825:7;20806:27;;;;;;;;;;;;;;;:35;;;;20855:9;20851:76;;;20901:7;20885:31;;20894:5;20885:31;;;20910:5;20885:31;;;;;;:::i;:::-;;;;;;;;20851:76;20501:432;;;;:::o;16808:1107::-;16913:1;16897:18;;:4;:18;;;16893:540;;17049:5;17033:12;;:21;;;;;;;:::i;:::-;;;;;;;;16893:540;;;17085:19;17107:9;:15;17117:4;17107:15;;;;;;;;;;;;;;;;17085:37;;17154:5;17140:11;:19;17136:115;;;17211:4;17217:11;17230:5;17186:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17136:115;17403:5;17389:11;:19;17371:9;:15;17381:4;17371:15;;;;;;;;;;;;;;;:37;;;;17071:362;16893:540;17461:1;17447:16;;:2;:16;;;17443:425;;17626:5;17610:12;;:21;;;;;;;;;;;17443:425;;;17838:5;17821:9;:13;17831:2;17821:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17443:425;17898:2;17883:25;;17892:4;17883:25;;;17902:5;17883:25;;;;;;:::i;:::-;;;;;;;;16808:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:474::-;5149:6;5157;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5459:2;5485:53;5530:7;5521:6;5510:9;5506:22;5485:53;:::i;:::-;5475:63;;5430:118;5081:474;;;;;:::o;5561:180::-;5609:77;5606:1;5599:88;5706:4;5703:1;5696:15;5730:4;5727:1;5720:15;5747:320;5791:6;5828:1;5822:4;5818:12;5808:22;;5875:1;5869:4;5865:12;5896:18;5886:81;;5952:4;5944:6;5940:17;5930:27;;5886:81;6014:2;6006:6;6003:14;5983:18;5980:38;5977:84;;6033:18;;:::i;:::-;5977:84;5798:269;5747:320;;;:::o;6073:118::-;6160:24;6178:5;6160:24;:::i;:::-;6155:3;6148:37;6073:118;;:::o;6197:442::-;6346:4;6384:2;6373:9;6369:18;6361:26;;6397:71;6465:1;6454:9;6450:17;6441:6;6397:71;:::i;:::-;6478:72;6546:2;6535:9;6531:18;6522:6;6478:72;:::i;:::-;6560;6628:2;6617:9;6613:18;6604:6;6560:72;:::i;:::-;6197:442;;;;;;:::o;6645:222::-;6738:4;6776:2;6765:9;6761:18;6753:26;;6789:71;6857:1;6846:9;6842:17;6833:6;6789:71;:::i;:::-;6645:222;;;;:::o;6873:180::-;6921:77;6918:1;6911:88;7018:4;7015:1;7008:15;7042:4;7039:1;7032:15;7059:191;7099:3;7118:20;7136:1;7118:20;:::i;:::-;7113:25;;7152:20;7170:1;7152:20;:::i;:::-;7147:25;;7195:1;7192;7188:9;7181:16;;7216:3;7213:1;7210:10;7207:36;;;7223:18;;:::i;:::-;7207:36;7059:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "710600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "338",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22880,
									"end": 23020,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 22911,
									"end": 23018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "546F6B656E420000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "PUSH",
									"source": 0,
									"value": "544B420000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12475,
									"end": 12480,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12467,
									"end": 12472,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12467,
									"end": 12480,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12467,
									"end": 12480,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12467,
									"end": 12480,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12467,
									"end": 12480,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12467,
									"end": 12480,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12467,
									"end": 12480,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12467,
									"end": 12480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12467,
									"end": 12480,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12467,
									"end": 12480,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12467,
									"end": 12480,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12500,
									"end": 12507,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12490,
									"end": 12497,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12490,
									"end": 12507,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12490,
									"end": 12507,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12490,
									"end": 12507,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12490,
									"end": 12507,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12490,
									"end": 12507,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12490,
									"end": 12507,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12490,
									"end": 12507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12490,
									"end": 12507,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12490,
									"end": 12507,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12490,
									"end": 12507,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12401,
									"end": 12514,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 23011,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22985,
									"end": 22995,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 22997,
									"end": 23010,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 22984,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22979,
									"end": 22984,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22979,
									"end": 22984,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 23011,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22979,
									"end": 23011,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 23011,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 23011,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22979,
									"end": 23011,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22911,
									"end": 23018,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18258,
									"end": 18466,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 18258,
									"end": 18466,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18347,
									"end": 18348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18328,
									"end": 18349,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18328,
									"end": 18349,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18328,
									"end": 18335,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18328,
									"end": 18349,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18328,
									"end": 18349,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18328,
									"end": 18349,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18324,
									"end": 18415,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 18324,
									"end": 18415,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18401,
									"end": 18402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 18372,
									"end": 18404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18372,
									"end": 18404,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18324,
									"end": 18415,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 18324,
									"end": 18415,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18424,
									"end": 18459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 18440,
									"end": 18441,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18444,
									"end": 18451,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18453,
									"end": 18458,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18424,
									"end": 18431,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18424,
									"end": 18431,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18424,
									"end": 18431,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18424,
									"end": 18459,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18424,
									"end": 18459,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18424,
									"end": 18459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18424,
									"end": 18459,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 18424,
									"end": 18459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18258,
									"end": 18466,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18258,
									"end": 18466,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18258,
									"end": 18466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16808,
									"end": 17915,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 16808,
									"end": 17915,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16913,
									"end": 16914,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16897,
									"end": 16915,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16897,
									"end": 16915,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16897,
									"end": 16901,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16897,
									"end": 16915,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16897,
									"end": 16915,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16897,
									"end": 16915,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16893,
									"end": 17433,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 16893,
									"end": 17433,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17049,
									"end": 17054,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17045,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17033,
									"end": 17045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 17033,
									"end": 17054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17033,
									"end": 17054,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16893,
									"end": 17433,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16893,
									"end": 17433,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16893,
									"end": 17433,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 16893,
									"end": 17433,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17085,
									"end": 17104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17107,
									"end": 17116,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17117,
									"end": 17121,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17107,
									"end": 17122,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17085,
									"end": 17122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17085,
									"end": 17122,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17154,
									"end": 17159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17140,
									"end": 17151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17140,
									"end": 17159,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17136,
									"end": 17251,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17136,
									"end": 17251,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 17136,
									"end": 17251,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17211,
									"end": 17215,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17230,
									"end": 17235,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17186,
									"end": 17236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17236,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17136,
									"end": 17251,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 17136,
									"end": 17251,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17403,
									"end": 17408,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17389,
									"end": 17400,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17389,
									"end": 17408,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17380,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17381,
									"end": 17385,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17371,
									"end": 17386,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17408,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17408,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17371,
									"end": 17408,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17071,
									"end": 17433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16893,
									"end": 17433,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16893,
									"end": 17433,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17462,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17447,
									"end": 17463,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17447,
									"end": 17463,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17447,
									"end": 17449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17447,
									"end": 17463,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17447,
									"end": 17463,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17447,
									"end": 17463,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17443,
									"end": 17868,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17443,
									"end": 17868,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17626,
									"end": 17631,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17622,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17610,
									"end": 17622,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17610,
									"end": 17631,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17631,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17631,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17631,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17631,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17631,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17631,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17631,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17631,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17631,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17443,
									"end": 17868,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17443,
									"end": 17868,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17443,
									"end": 17868,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17443,
									"end": 17868,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17838,
									"end": 17843,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17830,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17833,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17834,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17821,
									"end": 17843,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17843,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17843,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17843,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17843,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17821,
									"end": 17843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17443,
									"end": 17868,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17443,
									"end": 17868,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17898,
									"end": 17900,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17892,
									"end": 17896,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17902,
									"end": 17907,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17883,
									"end": 17908,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17883,
									"end": 17908,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16808,
									"end": 17915,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16808,
									"end": 17915,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16808,
									"end": 17915,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16808,
									"end": 17915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6232,
									"end": 6239,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6314,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6265,
									"end": 6270,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6261,
									"end": 6315,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 6393,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7007,
									"end": 7010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 7044,
									"end": 7045,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7026,
									"end": 7046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 7078,
									"end": 7079,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7060,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7100,
									"end": 7101,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7096,
									"end": 7105,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7124,
									"end": 7127,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7121,
									"end": 7122,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 7131,
									"end": 7149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 7269,
									"end": 7274,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7251,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7246,
									"end": 7249,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7239,
									"end": 7276,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7164,
									"end": 7282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7441,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7477,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7460,
									"end": 7478,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7554,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7532,
									"end": 7538,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 7488,
									"end": 7559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 7637,
									"end": 7639,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7626,
									"end": 7635,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7622,
									"end": 7640,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7613,
									"end": 7619,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 7569,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 7719,
									"end": 7721,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7708,
									"end": 7717,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7695,
									"end": 7701,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 7651,
									"end": 7723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7288,
									"end": 7730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7829,
									"end": 7833,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 7869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7856,
									"end": 7865,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7852,
									"end": 7870,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 7948,
									"end": 7949,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7937,
									"end": 7946,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7933,
									"end": 7950,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 7880,
									"end": 7951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7736,
									"end": 7958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22880,
									"end": 23020,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6aca3a7a4b4d78e067bda730d21bf5e57ad79b1da4b69c35d49e7ac2b3d712964736f6c634300081a0033",
									".code": [
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 23020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12579,
											"end": 12668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12579,
											"end": 12668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14798,
											"end": 14984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14798,
											"end": 14984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13649,
											"end": 13746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13649,
											"end": 13746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15576,
											"end": 15820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15576,
											"end": 15820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15576,
											"end": 15820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13507,
											"end": 13589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13507,
											"end": 13589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13804,
											"end": 13920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13804,
											"end": 13920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13804,
											"end": 13920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 12781,
											"end": 12874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12781,
											"end": 12874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14115,
											"end": 14293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14115,
											"end": 14293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14115,
											"end": 14293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14351,
											"end": 14491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14351,
											"end": 14491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14351,
											"end": 14491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12637,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12656,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12649,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12649,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12579,
											"end": 12668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14871,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14887,
											"end": 14900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14903,
											"end": 14915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14903,
											"end": 14913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14903,
											"end": 14915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14903,
											"end": 14915,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14903,
											"end": 14915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14925,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14934,
											"end": 14939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14941,
											"end": 14948,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14950,
											"end": 14955,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14925,
											"end": 14933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14925,
											"end": 14956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14925,
											"end": 14956,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14925,
											"end": 14956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14973,
											"end": 14977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14966,
											"end": 14977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14966,
											"end": 14977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14966,
											"end": 14977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13727,
											"end": 13739,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13727,
											"end": 13739,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13720,
											"end": 13739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13720,
											"end": 13739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15663,
											"end": 15667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 15697,
											"end": 15707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 15697,
											"end": 15709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15709,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 15697,
											"end": 15709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15679,
											"end": 15709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15679,
											"end": 15709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15719,
											"end": 15756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 15735,
											"end": 15739,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15741,
											"end": 15748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15755,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15719,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 15719,
											"end": 15756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15719,
											"end": 15756,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 15719,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15766,
											"end": 15792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 15776,
											"end": 15780,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15782,
											"end": 15784,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15791,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15766,
											"end": 15775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15766,
											"end": 15792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15766,
											"end": 15792,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 15766,
											"end": 15792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15809,
											"end": 15813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15802,
											"end": 15813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13580,
											"end": 13582,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13573,
											"end": 13582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13869,
											"end": 13876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13895,
											"end": 13904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13905,
											"end": 13912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13888,
											"end": 13913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13888,
											"end": 13913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12841,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12860,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12853,
											"end": 12867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12853,
											"end": 12867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14200,
											"end": 14213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14216,
											"end": 14226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14216,
											"end": 14228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14200,
											"end": 14228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14200,
											"end": 14228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14238,
											"end": 14265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14248,
											"end": 14253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14257,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14259,
											"end": 14264,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14238,
											"end": 14247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 14238,
											"end": 14265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14238,
											"end": 14265,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14238,
											"end": 14265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14275,
											"end": 14286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14115,
											"end": 14293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14431,
											"end": 14438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14457,
											"end": 14468,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14469,
											"end": 14474,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14476,
											"end": 14483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14457,
											"end": 14484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14450,
											"end": 14484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14450,
											"end": 14484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4258,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4162,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4215,
											"end": 4222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4251,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19526,
											"end": 19654,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19526,
											"end": 19654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19610,
											"end": 19647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19619,
											"end": 19624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19626,
											"end": 19633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19635,
											"end": 19640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19642,
											"end": 19646,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19610,
											"end": 19618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19610,
											"end": 19647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19610,
											"end": 19647,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19610,
											"end": 19647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19526,
											"end": 19654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19526,
											"end": 19654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19526,
											"end": 19654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19526,
											"end": 19654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21215,
											"end": 21692,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 21215,
											"end": 21692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21314,
											"end": 21338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21341,
											"end": 21366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 21351,
											"end": 21356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21358,
											"end": 21365,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21341,
											"end": 21350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 21341,
											"end": 21366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21341,
											"end": 21366,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 21341,
											"end": 21366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21314,
											"end": 21366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21314,
											"end": 21366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21400,
											"end": 21417,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21380,
											"end": 21396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21380,
											"end": 21417,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21376,
											"end": 21686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 21376,
											"end": 21686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21437,
											"end": 21453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21437,
											"end": 21461,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21433,
											"end": 21563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21433,
											"end": 21563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 21433,
											"end": 21563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 21540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 21488,
											"end": 21548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21433,
											"end": 21563,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 21433,
											"end": 21563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21604,
											"end": 21661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 21613,
											"end": 21618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21620,
											"end": 21627,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21648,
											"end": 21653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21629,
											"end": 21645,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21629,
											"end": 21653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21655,
											"end": 21660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21604,
											"end": 21612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 21604,
											"end": 21661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21604,
											"end": 21661,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 21604,
											"end": 21661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21376,
											"end": 21686,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 21376,
											"end": 21686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21304,
											"end": 21692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21215,
											"end": 21692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21215,
											"end": 21692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21215,
											"end": 21692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21215,
											"end": 21692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16493,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16193,
											"end": 16493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16276,
											"end": 16294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16276,
											"end": 16294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16276,
											"end": 16280,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16276,
											"end": 16294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16276,
											"end": 16294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16276,
											"end": 16294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16272,
											"end": 16358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 16345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 16317,
											"end": 16347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16358,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16272,
											"end": 16358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16385,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16371,
											"end": 16387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16371,
											"end": 16387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16371,
											"end": 16373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16371,
											"end": 16387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16371,
											"end": 16387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16371,
											"end": 16387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16367,
											"end": 16453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16439,
											"end": 16440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 16410,
											"end": 16442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16410,
											"end": 16442,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16453,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16367,
											"end": 16453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16462,
											"end": 16486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16470,
											"end": 16474,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16476,
											"end": 16478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16480,
											"end": 16485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16462,
											"end": 16469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16462,
											"end": 16486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16462,
											"end": 16486,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16462,
											"end": 16486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20933,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 20501,
											"end": 20933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20613,
											"end": 20632,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20613,
											"end": 20632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20613,
											"end": 20618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20613,
											"end": 20632,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20613,
											"end": 20632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20613,
											"end": 20632,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20609,
											"end": 20698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20609,
											"end": 20698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20684,
											"end": 20685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 20655,
											"end": 20687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20655,
											"end": 20687,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20609,
											"end": 20698,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20609,
											"end": 20698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20730,
											"end": 20731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20711,
											"end": 20732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20711,
											"end": 20732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20711,
											"end": 20718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20711,
											"end": 20732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20711,
											"end": 20732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20711,
											"end": 20732,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20707,
											"end": 20797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20707,
											"end": 20797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20783,
											"end": 20784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 20755,
											"end": 20786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20786,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20707,
											"end": 20797,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20707,
											"end": 20797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20817,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20818,
											"end": 20823,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20806,
											"end": 20824,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20825,
											"end": 20832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20806,
											"end": 20833,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20841,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20806,
											"end": 20841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20851,
											"end": 20927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20901,
											"end": 20908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20899,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20910,
											"end": 20915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20885,
											"end": 20916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20916,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20927,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20851,
											"end": 20927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20501,
											"end": 20933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 17915,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16808,
											"end": 17915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16897,
											"end": 16915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16897,
											"end": 16915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 16901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 16915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16897,
											"end": 16915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 16915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16893,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 16893,
											"end": 17433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17049,
											"end": 17054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17045,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17033,
											"end": 17045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 17033,
											"end": 17054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16893,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 16893,
											"end": 17433,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16893,
											"end": 17433,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 16893,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17085,
											"end": 17104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17107,
											"end": 17116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17117,
											"end": 17121,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17085,
											"end": 17122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17085,
											"end": 17122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17140,
											"end": 17151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17140,
											"end": 17159,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17136,
											"end": 17251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17136,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 17136,
											"end": 17251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17230,
											"end": 17235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 17186,
											"end": 17236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17136,
											"end": 17251,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 17136,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17403,
											"end": 17408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17389,
											"end": 17400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17389,
											"end": 17408,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17381,
											"end": 17385,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17371,
											"end": 17386,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17408,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17071,
											"end": 17433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16893,
											"end": 17433,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 16893,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17447,
											"end": 17463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17447,
											"end": 17463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17447,
											"end": 17449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17447,
											"end": 17463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17447,
											"end": 17463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17447,
											"end": 17463,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17443,
											"end": 17868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17443,
											"end": 17868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17626,
											"end": 17631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17622,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17610,
											"end": 17622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17610,
											"end": 17631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17631,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17631,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17443,
											"end": 17868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 17443,
											"end": 17868,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17443,
											"end": 17868,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17443,
											"end": 17868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17838,
											"end": 17843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17833,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17821,
											"end": 17843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17843,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17843,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 17843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17443,
											"end": 17868,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 17443,
											"end": 17868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17898,
											"end": 17900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17902,
											"end": 17907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17883,
											"end": 17908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17883,
											"end": 17908,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 17915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 17915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 17915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 17915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5485,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5686,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5696,
											"end": 5711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5727,
											"end": 5728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 5830,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5957,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6017,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5980,
											"end": 6018,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6033,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 6067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6178,
											"end": 6183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6160,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6373,
											"end": 6382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6465,
											"end": 6466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6454,
											"end": 6463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6447,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6397,
											"end": 6468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6535,
											"end": 6544,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6478,
											"end": 6550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6617,
											"end": 6626,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6613,
											"end": 6631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6610,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6560,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 6742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6765,
											"end": 6774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6846,
											"end": 6855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6789,
											"end": 6860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6998,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7008,
											"end": 7023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7046,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7099,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7136,
											"end": 7137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7118,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7152,
											"end": 7172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7219,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7210,
											"end": 7220,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7223,
											"end": 7241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/TokenB_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Token B contract for Eth course - Hugo Jaca Funciones:      Constructor. Inicializa el token Eventos:      Crear dos tokens ERC-20 simples: Los contrato de los tokens deben tener obligatoriamente los nombres TokenA y TokenB.      Implementar un contrato de exchange (denominado obligatoriamente SimpleDEX) que:         Mantenga un pool de liquidez para TokenA y TokenB.         Utilice la f\\u00f3rmula del producto constante (x+dx)(y-dy) = xy para calcular los precios de intercambio.         Permita a\\u00f1adir y retirar liquidez.         Permita intercambiar TokenA por TokenB y viceversa.      El contrato SimpleDEX debe contar obligatoriamente y sin modificaci\\u00f3n de la interface con las siguientes funciones:         constructor(address _tokenA, address _tokenB)         addLiquidity(uint256 amountA, uint256 amountB)         swapAforB(uint256 amountAIn)         swapBforA(uint256 amountBIn)         removeLiquidity(uint256 amountA, uint256 amountB)         getPrice(address _token)      Incluir los eventos que consideren convenientes.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"TokenB \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenB_flattened.sol\":\"TokenB\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenB_flattened.sol\":{\"keccak256\":\"0x8a370e3323bbcbbd06dce847bbe03725bf5bbc78596eaaa03fd7e51ed3d4a570\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://54b8f40fb7e0e3bd92173082cf6ad56f3ffa4ff90e8e2558952b7a7a452431f9\",\"dweb:/ipfs/QmUXHLm5ec19M5ATnChYWGPA7PHNjKKTvTVU2oXpqc9umo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 275,
								"contract": "contracts/TokenB_flattened.sol:TokenB",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 281,
								"contract": "contracts/TokenB_flattened.sol:TokenB",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 283,
								"contract": "contracts/TokenB_flattened.sol:TokenB",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 285,
								"contract": "contracts/TokenB_flattened.sol:TokenB",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 287,
								"contract": "contracts/TokenB_flattened.sol:TokenB",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/TokenB_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/TokenB_flattened.sol",
					"exportedSymbols": {
						"Context": [
							127
						],
						"ERC20": [
							767
						],
						"IERC1155Errors": [
							262
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							167
						],
						"IERC20Metadata": [
							99
						],
						"IERC721Errors": [
							215
						],
						"TokenB": [
							787
						]
					},
					"id": 788,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "169:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "195:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "277:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "290:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "459:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "484:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "468:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "506:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "490:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "518:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "510:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:57:0"
									},
									"src": "453:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "531:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "690:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "715:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "699:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "738:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "722:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "755:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "747:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:63:0"
									},
									"src": "684:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "768:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "847:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "884:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:0"
									},
									"scope": 77,
									"src": "838:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "899:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "984:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1002:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "994:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:9:0"
									},
									"scope": 77,
									"src": "975:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1049:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1276:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1293:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1285:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1305:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1297:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1330:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1330:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1329:6:0"
									},
									"scope": 77,
									"src": "1267:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1342:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1620:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1638:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1630:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1653:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1645:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1685:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:9:0"
									},
									"scope": 77,
									"src": "1611:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1700:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2381:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2397:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2389:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2414:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2388:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2439:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2439:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2438:6:0"
									},
									"scope": 77,
									"src": "2372:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2451:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2762:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2783:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2775:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2797:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2789:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2809:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2801:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2774:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2834:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2834:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2833:6:0"
									},
									"scope": 77,
									"src": "2753:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 788,
							"src": "267:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 79,
										"name": "IERC20",
										"nameLocations": [
											"3131:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3131:6:0"
									},
									"id": 80,
									"nodeType": "InheritanceSpecifier",
									"src": "3131:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 78,
								"nodeType": "StructuredDocumentation",
								"src": "3015:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3113:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3144:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3212:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3216:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3242:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 83,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3242:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3241:15:0"
									},
									"scope": 99,
									"src": "3203:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "3263:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3333:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3365:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 89,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3365:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:15:0"
									},
									"scope": 99,
									"src": "3324:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3386:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3465:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3473:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3499:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 95,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3499:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:7:0"
									},
									"scope": 99,
									"src": "3456:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 788,
							"src": "3103:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 100,
								"nodeType": "StructuredDocumentation",
								"src": "3633:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "Context",
							"nameLocation": "4148:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "4224:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 105,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4241:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4245:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4241:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 104,
												"id": 107,
												"nodeType": "Return",
												"src": "4234:17:0"
											}
										]
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4171:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4181:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4215:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4214:9:0"
									},
									"scope": 127,
									"src": "4162:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "4331:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 114,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4348:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4352:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4348:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 113,
												"id": 116,
												"nodeType": "Return",
												"src": "4341:15:0"
											}
										]
									},
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4273:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:2:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "4315:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4315:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4314:16:0"
									},
									"scope": 127,
									"src": "4264:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "4441:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4458:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 122,
												"id": 124,
												"nodeType": "Return",
												"src": "4451:8:0"
											}
										]
									},
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4378:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4398:2:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4432:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4431:9:0"
									},
									"scope": 127,
									"src": "4369:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 788,
							"src": "4130:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 128,
								"nodeType": "StructuredDocumentation",
								"src": "4616:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20Errors",
							"nameLocation": "4768:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "4787:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 137,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5107:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5140:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "5132:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5156:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "5148:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5173:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "5165:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5131:49:0"
									},
									"src": "5101:80:0"
								},
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "5187:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 142,
									"name": "ERC20InvalidSender",
									"nameLocation": "5350:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5377:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "5369:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5368:16:0"
									},
									"src": "5344:41:0"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "5391:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 147,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5561:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5590:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "5582:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5581:18:0"
									},
									"src": "5555:45:0"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "5606:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 156,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "5962:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5997:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "5989:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6014:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6006:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6033:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6025:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5988:52:0"
									},
									"src": "5956:85:0"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "6047:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 161,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6232:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6261:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6253:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:18:0"
									},
									"src": "6226:45:0"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "6277:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 166,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6483:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6511:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "6503:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:17:0"
									},
									"src": "6477:43:0"
								}
							],
							"scope": 788,
							"src": "4758:1764:0",
							"usedErrors": [
								137,
								142,
								147,
								156,
								161,
								166
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 168,
								"nodeType": "StructuredDocumentation",
								"src": "6524:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 215,
							"linearizedBaseContracts": [
								215
							],
							"name": "IERC721Errors",
							"nameLocation": "6678:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "6698:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 173,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6928:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6955:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "6947:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6946:15:0"
									},
									"src": "6922:40:0"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "6968:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 178,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7111:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7142:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "7134:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7133:17:0"
									},
									"src": "7105:46:0"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "7157:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 187,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7457:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7486:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "7478:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7502:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "7494:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "7511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7477:48:0"
									},
									"src": "7451:75:0"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "7532:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 192,
									"name": "ERC721InvalidSender",
									"nameLocation": "7695:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7723:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "7715:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:16:0"
									},
									"src": "7689:42:0"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7737:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 197,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7907:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7937:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "7929:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7928:18:0"
									},
									"src": "7901:46:0"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "7953:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 204,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8211:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8246:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8238:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8264:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8256:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8237:35:0"
									},
									"src": "8205:68:0"
								},
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "8279:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 209,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8464:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8494:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8486:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8485:18:0"
									},
									"src": "8458:46:0"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "8510:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 214,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8718:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8748:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "8740:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8739:18:0"
									},
									"src": "8712:46:0"
								}
							],
							"scope": 788,
							"src": "6668:2092:0",
							"usedErrors": [
								173,
								178,
								187,
								192,
								197,
								204,
								209,
								214
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 216,
								"nodeType": "StructuredDocumentation",
								"src": "8762:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 262,
							"linearizedBaseContracts": [
								262
							],
							"name": "IERC1155Errors",
							"nameLocation": "8918:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "8939:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 227,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9311:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9346:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "9338:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9362:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "9354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9379:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "9371:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9395:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "9387:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9337:66:0"
									},
									"src": "9305:99:0"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "9410:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 232,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9573:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9602:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "9594:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9593:16:0"
									},
									"src": "9567:43:0"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "9616:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 237,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9786:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9817:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "9809:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9808:18:0"
									},
									"src": "9780:47:0"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "9833:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 244,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10100:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10137:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "10129:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10155:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "10147:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10128:33:0"
									},
									"src": "10094:68:0"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "10168:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 249,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10353:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10384:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "10376:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10375:18:0"
									},
									"src": "10347:47:0"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "10400:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 254,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10608:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10639:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "10631:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10630:18:0"
									},
									"src": "10602:47:0"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "10655:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 261,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "10946:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "10980:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "10972:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "10999:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "10991:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10971:41:0"
									},
									"src": "10940:73:0"
								}
							],
							"scope": 788,
							"src": "8908:2107:0",
							"usedErrors": [
								227,
								232,
								237,
								244,
								249,
								254,
								261
							],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 264,
										"name": "Context",
										"nameLocations": [
											"11933:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 127,
										"src": "11933:7:0"
									},
									"id": 265,
									"nodeType": "InheritanceSpecifier",
									"src": "11933:7:0"
								},
								{
									"baseName": {
										"id": 266,
										"name": "IERC20",
										"nameLocations": [
											"11942:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "11942:6:0"
									},
									"id": 267,
									"nodeType": "InheritanceSpecifier",
									"src": "11942:6:0"
								},
								{
									"baseName": {
										"id": 268,
										"name": "IERC20Metadata",
										"nameLocations": [
											"11950:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 99,
										"src": "11950:14:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "11950:14:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20Errors",
										"nameLocations": [
											"11966:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "11966:12:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "11966:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 263,
								"nodeType": "StructuredDocumentation",
								"src": "11148:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 767,
							"linearizedBaseContracts": [
								767,
								167,
								99,
								77,
								127
							],
							"name": "ERC20",
							"nameLocation": "11924:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 275,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12029:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "11985:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 274,
										"keyName": "account",
										"keyNameLocation": "12001:7:0",
										"keyType": {
											"id": 272,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11993:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11985:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 273,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12012:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 281,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12117:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "12045:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 280,
										"keyName": "account",
										"keyNameLocation": "12061:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12053:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12045:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 279,
											"keyName": "spender",
											"keyNameLocation": "12088:7:0",
											"keyType": {
												"id": 277,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12080:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12072:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 278,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12099:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 283,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12151:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "12135:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 282,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12135:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12185:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "12170:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 284,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12170:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12211:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "12196:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 286,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12196:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "12457:57:0",
										"statements": [
											{
												"expression": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 295,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "12467:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 296,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "12475:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12467:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "12467:13:0"
											},
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "12490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "12500:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12490:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12490:17:0"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "12225:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 304,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12427:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "12413:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12413:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12448:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "12434:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12434:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12412:44:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12457:0:0"
									},
									"scope": 767,
									"src": "12401:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										86
									],
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "12639:29:0",
										"statements": [
											{
												"expression": {
													"id": 310,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 285,
													"src": "12656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 309,
												"id": 311,
												"nodeType": "Return",
												"src": "12649:12:0"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "12520:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12588:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12592:2:0"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "12624:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12624:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12623:15:0"
									},
									"scope": 767,
									"src": "12579:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										92
									],
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "12843:31:0",
										"statements": [
											{
												"expression": {
													"id": 319,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "12860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 318,
												"id": 320,
												"nodeType": "Return",
												"src": "12853:14:0"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "12674:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12790:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12796:2:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "12828:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 316,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12828:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12827:15:0"
									},
									"scope": 767,
									"src": "12781:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										98
									],
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "13563:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13580:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 327,
												"id": 329,
												"nodeType": "Return",
												"src": "13573:9:0"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "12880:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13516:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13524:2:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "13556:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 325,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13556:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13555:7:0"
									},
									"scope": 767,
									"src": "13507:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "13710:36:0",
										"statements": [
											{
												"expression": {
													"id": 337,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 283,
													"src": "13727:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 338,
												"nodeType": "Return",
												"src": "13720:19:0"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "13595:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13658:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13669:2:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "13701:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13700:9:0"
									},
									"scope": 767,
									"src": "13649:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "13878:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 348,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "13895:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 350,
													"indexExpression": {
														"id": 349,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "13905:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13895:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 351,
												"nodeType": "Return",
												"src": "13888:25:0"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "13752:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13813:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "13823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13822:17:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "13869:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13868:9:0"
									},
									"scope": 767,
									"src": "13804:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "14190:103:0",
										"statements": [
											{
												"assignments": [
													364
												],
												"declarations": [
													{
														"constant": false,
														"id": 364,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14208:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "14200:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 363,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14200:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 365,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "14216:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14216:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14200:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "14248:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "14255:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "14259:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "14238:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14238:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "14238:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14282:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 362,
												"id": 375,
												"nodeType": "Return",
												"src": "14275:11:0"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "13926:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14124:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14141:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "14133:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14153:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "14145:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14132:27:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "14184:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14184:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14183:6:0"
									},
									"scope": 767,
									"src": "14115:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "14440:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 387,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "14457:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 389,
														"indexExpression": {
															"id": 388,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "14469:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14457:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 391,
													"indexExpression": {
														"id": 390,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "14476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14457:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 386,
												"id": 392,
												"nodeType": "Return",
												"src": "14450:34:0"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "14299:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14360:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14378:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14369:32:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14431:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14430:9:0"
									},
									"scope": 767,
									"src": "14351:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "14877:107:0",
										"statements": [
											{
												"assignments": [
													405
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14895:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "14887:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 404,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14887:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 406,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "14903:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14903:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14887:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "14934:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "14941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "14950:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															658,
															718
														],
														"referencedDeclaration": 658,
														"src": "14925:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14925:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "14925:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14973:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 403,
												"id": 416,
												"nodeType": "Return",
												"src": "14966:11:0"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "14497:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14807:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14823:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "14815:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14840:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "14832:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14814:32:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "14871:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14871:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14870:6:0"
									},
									"scope": 767,
									"src": "14798:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "15669:151:0",
										"statements": [
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15687:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "15679:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 430,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15679:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 432,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "15697:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15697:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15679:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "15735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "15741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15750:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 435,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "15719:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15719:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "15719:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "15776:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "15782:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "15766:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15766:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "15766:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 429,
												"id": 448,
												"nodeType": "Return",
												"src": "15802:11:0"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "14990:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15585:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15606:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "15598:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15620:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "15612:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "15624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15597:41:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "15663:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15663:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15662:6:0"
									},
									"scope": 767,
									"src": "15576:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "16262:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 460,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "16276:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16292:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 461,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16284:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16284:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16276:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "16272:86:0",
												"trueBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "16296:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16344:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16336:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 467,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16336:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16336:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 466,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "16317:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16317:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 472,
															"nodeType": "RevertStatement",
															"src": "16310:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 475,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "16371:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16385:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16377:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 476,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16377:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16377:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16371:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 489,
												"nodeType": "IfStatement",
												"src": "16367:86:0",
												"trueBody": {
													"id": 488,
													"nodeType": "Block",
													"src": "16389:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16439:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16431:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 482,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16431:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16431:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 481,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "16410:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16410:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 487,
															"nodeType": "RevertStatement",
															"src": "16403:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "16470:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "16476:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16480:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "16462:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16462:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "16462:24:0"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "15826:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16202:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16220:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "16212:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16234:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "16226:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16246:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "16238:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16211:41:0"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16262:0:0"
									},
									"scope": 767,
									"src": "16193:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "16883:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "16897:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16913:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16905:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16905:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16897:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 544,
													"nodeType": "Block",
													"src": "17071:362:0",
													"statements": [
														{
															"assignments": [
																519
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 519,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17093:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 544,
																	"src": "17085:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 518,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17085:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 523,
															"initialValue": {
																"baseExpression": {
																	"id": 520,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "17107:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 522,
																"indexExpression": {
																	"id": 521,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "17117:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17107:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17085:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 524,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "17140:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17140:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 534,
															"nodeType": "IfStatement",
															"src": "17136:115:0",
															"trueBody": {
																"id": 533,
																"nodeType": "Block",
																"src": "17161:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 528,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "17211:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 529,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 519,
																					"src": "17217:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 530,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17230:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 527,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "17186:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17186:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 532,
																		"nodeType": "RevertStatement",
																		"src": "17179:57:0"
																	}
																]
															}
														},
														{
															"id": 543,
															"nodeType": "UncheckedBlock",
															"src": "17264:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 535,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 275,
																				"src": "17371:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 537,
																			"indexExpression": {
																				"id": 536,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 500,
																				"src": "17381:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17371:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 538,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 519,
																				"src": "17389:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 539,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17403:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17389:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17371:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 542,
																	"nodeType": "ExpressionStatement",
																	"src": "17371:37:0"
																}
															]
														}
													]
												},
												"id": 545,
												"nodeType": "IfStatement",
												"src": "16893:540:0",
												"trueBody": {
													"id": 517,
													"nodeType": "Block",
													"src": "16917:148:0",
													"statements": [
														{
															"expression": {
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 513,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "17033:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 514,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17049:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17033:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 516,
															"nodeType": "ExpressionStatement",
															"src": "17033:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 546,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "17447:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17461:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17453:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 547,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17453:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17453:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17447:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 565,
													"nodeType": "Block",
													"src": "17662:206:0",
													"statements": [
														{
															"id": 564,
															"nodeType": "UncheckedBlock",
															"src": "17676:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 558,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 275,
																				"src": "17821:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 560,
																			"indexExpression": {
																				"id": 559,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "17831:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17821:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 561,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "17838:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17821:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 563,
																	"nodeType": "ExpressionStatement",
																	"src": "17821:22:0"
																}
															]
														}
													]
												},
												"id": 566,
												"nodeType": "IfStatement",
												"src": "17443:425:0",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "17465:191:0",
													"statements": [
														{
															"id": 556,
															"nodeType": "UncheckedBlock",
															"src": "17479:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 552,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "17610:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 553,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "17626:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17610:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 555,
																	"nodeType": "ExpressionStatement",
																	"src": "17610:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 568,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "17892:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "17898:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17902:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 567,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17883:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17883:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "EmitStatement",
												"src": "17878:30:0"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "16499:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16817:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16833:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "16825:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16847:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "16839:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16859:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "16851:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16824:41:0"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16883:0:0"
									},
									"scope": 767,
									"src": "16808:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "18314:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 582,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "18328:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18347:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 583,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18339:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18339:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18328:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "18324:91:0",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "18351:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18401:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18393:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 589,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18393:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18393:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 588,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "18372:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18372:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 594,
															"nodeType": "RevertStatement",
															"src": "18365:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18440:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18432:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 598,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18432:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18432:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "18444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "18453:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 597,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "18424:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18424:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "18424:35:0"
											}
										]
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "17921:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18267:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18281:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "18273:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18298:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "18290:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18272:32:0"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18314:0:0"
									},
									"scope": 767,
									"src": "18258:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "18840:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "18854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18873:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18865:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18865:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18865:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18854:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "18850:89:0",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "18877:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18925:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18917:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18917:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18917:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 621,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "18898:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18898:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 627,
															"nodeType": "RevertStatement",
															"src": "18891:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "18956:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18973:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18965:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 632,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18965:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18965:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "18977:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "18948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18948:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "18948:35:0"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "18472:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18793:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "18799:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18824:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "18816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:32:0"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18840:0:0"
									},
									"scope": 767,
									"src": "18784:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "19600:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "19619:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "19626:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19635:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19642:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 650,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															658,
															718
														],
														"referencedDeclaration": 718,
														"src": "19610:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19610:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "19610:37:0"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "18996:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19535:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19552:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "19544:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19567:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "19559:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19584:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "19576:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19543:47:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19600:0:0"
									},
									"scope": 767,
									"src": "19526:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "20599:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "20613:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20630:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20622:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 671,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20622:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20622:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20613:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 684,
												"nodeType": "IfStatement",
												"src": "20609:89:0",
												"trueBody": {
													"id": 683,
													"nodeType": "Block",
													"src": "20634:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20684:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20676:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 677,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20676:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20676:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 676,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "20655:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20655:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 682,
															"nodeType": "RevertStatement",
															"src": "20648:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "20711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20730:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 686,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20722:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20722:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20711:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "20707:90:0",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "20734:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20783:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20775:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 692,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20775:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20775:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 691,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 166,
																	"src": "20755:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20755:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 697,
															"nodeType": "RevertStatement",
															"src": "20748:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 700,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "20806:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 703,
															"indexExpression": {
																"id": 701,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "20818:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20806:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 704,
														"indexExpression": {
															"id": 702,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "20825:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20806:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 705,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20836:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20806:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "20806:35:0"
											},
											{
												"condition": {
													"id": 708,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 667,
													"src": "20855:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "20851:76:0",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "20866:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 710,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "20894:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 711,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "20901:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 712,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20910:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 709,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20885:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20885:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "EmitStatement",
															"src": "20880:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "19660:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20510:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20527:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20519:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20542:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20534:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20559:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20551:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20571:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20566:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20566:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20518:63:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20599:0:0"
									},
									"scope": 767,
									"src": "20501:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "21304:388:0",
										"statements": [
											{
												"assignments": [
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21322:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "21314:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21314:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [
														{
															"id": 731,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "21351:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "21358:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 730,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "21341:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21341:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21314:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 735,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "21380:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21405:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 737,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21405:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 736,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21400:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21400:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21414:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21400:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21380:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 764,
												"nodeType": "IfStatement",
												"src": "21376:310:0",
												"trueBody": {
													"id": 763,
													"nodeType": "Block",
													"src": "21419:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 742,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21437:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 743,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "21456:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21437:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 752,
															"nodeType": "IfStatement",
															"src": "21433:130:0",
															"trueBody": {
																"id": 751,
																"nodeType": "Block",
																"src": "21463:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 746,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 723,
																					"src": "21515:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 747,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21524:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 748,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 725,
																					"src": "21542:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 745,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "21488:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21488:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 750,
																		"nodeType": "RevertStatement",
																		"src": "21481:67:0"
																	}
																]
															}
														},
														{
															"id": 762,
															"nodeType": "UncheckedBlock",
															"src": "21576:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 754,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 721,
																				"src": "21613:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 755,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 723,
																				"src": "21620:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 756,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21629:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 757,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 725,
																					"src": "21648:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21629:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21655:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 753,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				658,
																				718
																			],
																			"referencedDeclaration": 718,
																			"src": "21604:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21604:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 761,
																	"nodeType": "ExpressionStatement",
																	"src": "21604:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "20939:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21224:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21248:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "21240:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21263:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "21255:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21255:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21280:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "21272:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21239:47:0"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21304:0:0"
									},
									"scope": 767,
									"src": "21215:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 788,
							"src": "11906:9788:0",
							"usedErrors": [
								137,
								142,
								147,
								156,
								161,
								166
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 769,
										"name": "ERC20",
										"nameLocations": [
											"22899:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "22899:5:0"
									},
									"id": 770,
									"nodeType": "InheritanceSpecifier",
									"src": "22899:5:0"
								}
							],
							"canonicalName": "TokenB",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 768,
								"nodeType": "StructuredDocumentation",
								"src": "21755:1122:0",
								"text": " @title TokenB \n @dev Token B contract for Eth course - Hugo Jaca\n Funciones:\n      Constructor. Inicializa el token\n Eventos:\n      Crear dos tokens ERC-20 simples: Los contrato de los tokens deben tener obligatoriamente los nombres TokenA y TokenB.\n      Implementar un contrato de exchange (denominado obligatoriamente SimpleDEX) que:\n         Mantenga un pool de liquidez para TokenA y TokenB.\n         Utilice la fórmula del producto constante (x+dx)(y-dy) = xy para calcular los precios de intercambio.\n         Permita añadir y retirar liquidez.\n         Permita intercambiar TokenA por TokenB y viceversa.\n      El contrato SimpleDEX debe contar obligatoriamente y sin modificación de la interface con las siguientes funciones:\n         constructor(address _tokenA, address _tokenB)\n         addLiquidity(uint256 amountA, uint256 amountB)\n         swapAforB(uint256 amountAIn)\n         swapBforA(uint256 amountBIn)\n         removeLiquidity(uint256 amountA, uint256 amountB)\n         getPrice(address _token)\n      Incluir los eventos que consideren convenientes."
							},
							"fullyImplemented": true,
							"id": 787,
							"linearizedBaseContracts": [
								787,
								767,
								167,
								99,
								77,
								127
							],
							"name": "TokenB",
							"nameLocation": "22889:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "22969:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 780,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "22985:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22989:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "22985:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "22997:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "22979:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22979:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "22979:32:0"
											}
										]
									},
									"id": 786,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "546f6b656e42",
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22952:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2",
														"typeString": "literal_string \"TokenB\""
													},
													"value": "TokenB"
												},
												{
													"hexValue": "544b42",
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ab61f3e2f61f385e65f7207e097e9653b89415bafbaff742c9593231971161ca",
														"typeString": "literal_string \"TKB\""
													},
													"value": "TKB"
												}
											],
											"id": 777,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 774,
												"name": "ERC20",
												"nameLocations": [
													"22946:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 767,
												"src": "22946:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22946:22:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "22931:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "22923:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22922:23:0"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22969:0:0"
									},
									"scope": 787,
									"src": "22911:107:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 788,
							"src": "22880:140:0",
							"usedErrors": [
								137,
								142,
								147,
								156,
								161,
								166
							],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "169:22852:0"
				},
				"id": 0
			}
		}
	}
}